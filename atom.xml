<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simon Xie</title>
  <icon>https://www.gravatar.com/avatar/32db771918c67cb8f4969f34b77012cf</icon>
  <subtitle>All magic comess with a price.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.codewalker.me/"/>
  <updated>2018-07-17T15:41:16.000Z</updated>
  <id>https://blog.codewalker.me/</id>
  
  <author>
    <name>Simon Xie</name>
    <email>simon.xie@codewalker.me</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Knowing descriptor in Python</title>
    <link href="https://blog.codewalker.me/2018/07/17/Knowing-descriptor-in-Python/"/>
    <id>https://blog.codewalker.me/2018/07/17/Knowing-descriptor-in-Python/</id>
    <published>2018-07-17T13:53:15.000Z</published>
    <updated>2018-07-17T15:41:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Read-it-below-carefully"><a href="#Read-it-below-carefully" class="headerlink" title="Read it below carefully"></a>Read it below carefully</h1><figure class="highlight python"><figcaption><span>knowing_descriptor_1.py</span><a href="/downloads/code/knowing_descriptor_1.py">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-07-16 17:17:42</span></span><br><span class="line"><span class="comment"># @Author  : Simon (simon.xie@codewalker.meg)</span></span><br><span class="line"><span class="comment"># @Link    : http://www.codewalker.me</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">P</span><span class="params">(object)</span>:</span>                                </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, v)</span>:</span>   </span><br><span class="line">        print(<span class="string">'init P'</span>) <span class="comment"># A0 step 1.1  </span></span><br><span class="line">        self.data = v                                         </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__get__</span><span class="params">(self, ins, cls)</span>:</span>   </span><br><span class="line">        print(<span class="string">f'from ins:<span class="subst">{ins.__dict__}</span> get <span class="subst">{self.data}</span> &amp; cls:<span class="subst">{cls}</span>'</span>)  <span class="comment"># B0   </span></span><br><span class="line">        <span class="keyword">return</span> self.data                </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__set__</span><span class="params">(self, ins, v)</span>:</span> </span><br><span class="line">        print(<span class="string">f'save <span class="subst">{v}</span> to <span class="subst">{ins.__dict__}</span>'</span>)    <span class="comment"># step 2.1.1      </span></span><br><span class="line">        self.data = v                   </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__delete__</span><span class="params">(self, ins)</span>:</span>          </span><br><span class="line">        <span class="keyword">del</span> self.data                   </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">()</span>:</span>                                </span><br><span class="line">    name = P(<span class="string">'Alice'</span>)   <span class="comment"># A0 step 1                    </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, v)</span>:</span>  <span class="comment"># A0 step 2</span></span><br><span class="line">        print(<span class="string">'init name'</span>)           </span><br><span class="line">        self.name = v       <span class="comment"># A0 step 2.1</span></span><br><span class="line">                            <span class="comment"># Call P when set name = v and cover 'Alice' to 'Bob'. </span></span><br><span class="line">                            <span class="comment"># Notice: Now we're NOT create instance for Person</span></span><br><span class="line">        print(<span class="string">'init street'</span>)                 </span><br><span class="line">        self.street = v     <span class="comment"># A0 step 3</span></span><br><span class="line"></span><br><span class="line">obj = Person(<span class="string">'Bob'</span>) <span class="comment">#  step A0 init P before init Person </span></span><br><span class="line">print(<span class="string">f'Does obj have name? <span class="subst">{ hasattr(obj, <span class="string">"name"</span>) }</span>'</span>)</span><br><span class="line">print(<span class="string">'-'</span>*<span class="number">20</span>)</span><br><span class="line">print(<span class="string">f'obj has:<span class="subst">{obj.__dict__}</span>'</span>)    <span class="comment"># obj has no name, because of P hold name variable???    </span></span><br><span class="line">print(<span class="string">f'Does obj have name? <span class="subst">{ hasattr(obj, <span class="string">"name"</span>) }</span>'</span>)</span><br><span class="line">print(<span class="string">f'Now will get name:<span class="subst">{obj.name}</span>'</span>) <span class="comment"># B0. Because of descript name</span></span><br><span class="line">                                    <span class="comment"># So call P.__get__ first before get name's value</span></span><br><span class="line">print(<span class="string">'-'</span>*<span class="number">20</span>)</span><br><span class="line">print(<span class="string">'Now will get street:{obj.street}'</span>)   <span class="comment"># We are NOT descript street</span></span><br><span class="line">                                            <span class="comment"># so will not call any func from P</span></span><br><span class="line">obj.name = <span class="string">'Charley'</span>    <span class="comment"># call P.__set__ again</span></span><br><span class="line">                        <span class="comment"># Notice: instance obj has no name, because of P hold name variable</span></span><br><span class="line">print(<span class="string">f'Does obj have name? <span class="subst">{ hasattr(obj, <span class="string">"name"</span>) }</span>'</span>)</span><br><span class="line">print(<span class="string">f'get name from <span class="subst">{obj}</span>: <span class="subst">{obj.name}</span>'</span>)</span><br><span class="line">print(<span class="string">f'del name'</span>)</span><br><span class="line"><span class="keyword">del</span> obj.name</span><br><span class="line">print(<span class="string">f'Does obj have name? <span class="subst">{ hasattr(obj, <span class="string">"name"</span>) }</span>'</span>)</span><br><span class="line">obj.name = <span class="string">'Doggie'</span> <span class="comment"># set name = Doggie</span></span><br><span class="line">print(<span class="string">f'Does obj have name? <span class="subst">{ hasattr(obj, <span class="string">"name"</span>) }</span>'</span>)</span><br><span class="line">print(<span class="string">'-'</span>*<span class="number">20</span>)</span><br><span class="line">print(type(obj).__dict__[<span class="string">'name'</span>].__get__(obj, type(obj)))</span><br><span class="line">print(<span class="string">'-'</span>*<span class="number">20</span>)</span><br><span class="line">print(type(obj).__dict__[<span class="string">'name'</span>].__get__(obj, type(obj)) <span class="keyword">is</span> obj.name)</span><br><span class="line"><span class="comment"># In fact call obj.name is transfering to call type(obj).__dict__['name'].__get__(obj, type(obj))</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Read-it-below-carefully&quot;&gt;&lt;a href=&quot;#Read-it-below-carefully&quot; class=&quot;headerlink&quot; title=&quot;Read it below carefully&quot;&gt;&lt;/a&gt;Read it below car
      
    
    </summary>
    
    
      <category term="python" scheme="https://blog.codewalker.me/tags/python/"/>
    
      <category term="descriptor" scheme="https://blog.codewalker.me/tags/descriptor/"/>
    
  </entry>
  
  <entry>
    <title>using code_dir on a elegant way</title>
    <link href="https://blog.codewalker.me/2018/07/17/using-code-dir-in-elegant-way/"/>
    <id>https://blog.codewalker.me/2018/07/17/using-code-dir-in-elegant-way/</id>
    <published>2018-07-17T08:39:19.000Z</published>
    <updated>2018-07-17T09:10:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Howto"><a href="#Howto" class="headerlink" title="Howto"></a>Howto</h1><ol><li><p>Create folders if not exist.</p><p> In your hexo root.</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="built_in">source</span>/downloads/code</span><br></pre></td></tr></table></figure></li><li><p>Include your source code in your post</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include_code base_socket_client lang:python base_socket_client.py %&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h1><figure class="highlight python"><figcaption><span>base_socket_client.py</span><a href="/downloads/code/base_socket_client.py">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-07-15 12:55:35</span></span><br><span class="line"><span class="comment"># @Author  : Simon (simon.xie@codewalker.meg)</span></span><br><span class="line"><span class="comment"># @Link    : http://www.codewalker.me</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Main</span><span class="params">()</span>:</span></span><br><span class="line">        host = <span class="string">'127.0.0.1'</span></span><br><span class="line">        port = <span class="number">5000</span></span><br><span class="line">         </span><br><span class="line">        mySocket = socket.socket()</span><br><span class="line">        mySocket.connect((host,port))</span><br><span class="line">         </span><br><span class="line">        message = input(<span class="string">" -&gt; "</span>)</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">while</span> message != <span class="string">'q'</span>:</span><br><span class="line">                mySocket.send(message.encode())</span><br><span class="line">                data = mySocket.recv(<span class="number">1024</span>).decode()</span><br><span class="line">                 </span><br><span class="line">                <span class="keyword">print</span> (<span class="string">'Received from server: '</span> + data)</span><br><span class="line">                 </span><br><span class="line">                message = input(<span class="string">" -&gt; "</span>)</span><br><span class="line">                 </span><br><span class="line">        mySocket.close()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    Main()</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'xxxx'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Howto&quot;&gt;&lt;a href=&quot;#Howto&quot; class=&quot;headerlink&quot; title=&quot;Howto&quot;&gt;&lt;/a&gt;Howto&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create folders if not exist.&lt;/p&gt;
&lt;p&gt; In your hexo
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://blog.codewalker.me/tags/hexo/"/>
    
      <category term="howto" scheme="https://blog.codewalker.me/tags/howto/"/>
    
  </entry>
  
  <entry>
    <title>sina api v1.5.4 trade_related_no</title>
    <link href="https://blog.codewalker.me/2018/07/17/sina-api-v1-5-4-trade-related-no/"/>
    <id>https://blog.codewalker.me/2018/07/17/sina-api-v1-5-4-trade-related-no/</id>
    <published>2018-07-17T03:09:34.000Z</published>
    <updated>2018-07-17T03:11:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="接口改造"><a href="#接口改造" class="headerlink" title="接口改造"></a>接口改造</h1><pre><code>- 代收    1. **create_hosting_collect_trade**    2. 投资    3. 还本金    4. 充值利息    5. 充值本金    6. 债权认购-投资人扣款- 代付    1. **create_single_hosting_pay_trade**    2. 发放利息    3. 放款        - 到存钱罐账户        - **create_single_hosting_pay_to_card_trade**到银行卡    4. 还款本金    5. 债权成功回调-债权人收钱    6. 投资退款    7. 债券退款- 交易关联号查询</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;接口改造&quot;&gt;&lt;a href=&quot;#接口改造&quot; class=&quot;headerlink&quot; title=&quot;接口改造&quot;&gt;&lt;/a&gt;接口改造&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;- 代收

    1. **create_hosting_collect_trade**

    2. 
      
    
    </summary>
    
    
      <category term="php" scheme="https://blog.codewalker.me/tags/php/"/>
    
      <category term="sina" scheme="https://blog.codewalker.me/tags/sina/"/>
    
  </entry>
  
  <entry>
    <title>Hexo bind your onw domain</title>
    <link href="https://blog.codewalker.me/2018/07/15/hexo-bind-your-onw-domain/"/>
    <id>https://blog.codewalker.me/2018/07/15/hexo-bind-your-onw-domain/</id>
    <published>2018-07-15T12:39:51.000Z</published>
    <updated>2018-07-17T09:09:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>There’s only <strong>3</strong> stpes to set up.</p><ol><li><p>Create CNAME file<br> Create a file named <strong>CNAME</strong> that path should be <code>/source/CNAME</code> and field in your domain. In my case, it should be <code>blog.codewalker.me</code>. <code>notice</code> There would be no <code>http://</code> or <code>https://</code> etc.</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat CNAME</span><br><span class="line">blog.codewalker.me</span><br></pre></td></tr></table></figure></li><li><p>Setup domain<br> Setup you DNS to add a subdomain as CNAME to you GitHub pages domain.<br> Refers mine, it should be <code>blog.codewalker.me</code> to <code>codewalkertse.github.io</code></p></li><li><p>Step 3 or not<br> In my case, I should make <a href="http://codewalker.me" target="_blank" rel="noopener">codewalker.me</a> redirect to <a href="http://blog.codewalker.me">blog.codewalker.me</a>.<br> In my Nginx Server the <code>.conf</code> should be like this:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name codewalker.me www.codewalker.me;</span><br><span class="line">    rewrite ^/(.*) http://blog.codewalker.me/<span class="variable">$1</span> permanent;</span><br><span class="line">    access_log off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> To make all request redirect to blog.codewalker.me by 301 signal.</p></li></ol><p>Have fun with hexo</p><p>I love this world</p><p>EOF</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;There’s only &lt;strong&gt;3&lt;/strong&gt; stpes to set up.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create CNAME file&lt;br&gt; Create a file named &lt;strong&gt;CNAME&lt;/strong&gt; that pa
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://blog.codewalker.me/tags/Hexo/"/>
    
      <category term="Howto" scheme="https://blog.codewalker.me/tags/Howto/"/>
    
  </entry>
  
  <entry>
    <title>Knowing python3 socket deeply</title>
    <link href="https://blog.codewalker.me/2018/07/15/Knowing-python3-socket-deeply/"/>
    <id>https://blog.codewalker.me/2018/07/15/Knowing-python3-socket-deeply/</id>
    <published>2018-07-15T05:08:16.000Z</published>
    <updated>2018-07-17T09:10:06.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>昨天的<a href="/2018/07/15/Why-there-are-only-request-response-model-but-how-to-explain-push">初识PythonSocket</a>大概讲了下<code>Python Socket</code>的知识，觉得不是很深入(其实这篇也只是个皮毛对知识的一个总结), 觉得理解Socket的原理对自己还是挺有帮助的. 对于 Web 的原理对于为什么 <code>RESTful</code> 为什么会成为Api接口的公认形式的理解还是非常有帮助.在深入之前我们还是首先要理解一些<code>术语</code>.</p><h2 id="Socket"><a href="#Socket" class="headerlink" title="Socket"></a>Socket</h2><blockquote><p>网络上的两个程序通过一个双向的通信连接实现数据的交换，这个连接的一端称为一个socket<br>A socket is an endpoint for communication between two machines.</p></blockquote><p>是的，从名字上我们可以知道 <code>Socket</code> 一个管道中两端的末端。试想网络通信好比一个水管，而 <code>Socket</code> 就是入水口(发送方)或是出水口(接收方). 那么既然只是两个端点她就不会在乎中间经过的媒介是什么，是水管(直连)，是游泳池(局域网)，是城市管网(城域网)，是世界地下水系统(Internet)的方式都无所谓了.</p><h2 id="协议-protocol"><a href="#协议-protocol" class="headerlink" title="协议(protocol)"></a>协议(protocol)</h2><h3 id="又称为通信协议"><a href="#又称为通信协议" class="headerlink" title="又称为通信协议"></a>又称为通信协议</h3><blockquote><p>是对数据格式和计算机之间交换数据时必须遵守的规则的正式描述<br>a communication protocol is a system of rules that allow two or more entities of a communications system to transmit information via any kind of variation of a physical quantity.</p></blockquote><p>Socket支持 <code>TCP</code> 以及 <code>UDP</code>. 这里就不扩展开来了.</p><h2 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h2><p>服务端，一个用于等待客户端<code>请求</code>以及<code>服务和处理</code>客户端请求的并<code>响应</code>的一端</p><h2 id="Client"><a href="#Client" class="headerlink" title="Client"></a>Client</h2><p>客户端， 是这个<code>服务</code>的另外一端. 用于发送<code>请求</code>.</p><h1 id="What-we-are-building-我们将要做什么"><a href="#What-we-are-building-我们将要做什么" class="headerlink" title="What we are building 我们将要做什么"></a>What we are building 我们将要做什么</h1><p>我们将要简单的实现一个服务端和一个客户端。 服务端开启了一个<code>Socket</code>端口等待客户端的链接。一旦客户端连接上了，她可以发送一些信息。同时，服务端可以处理(在这里就只是简单的转换为大写)客户端发送过来的信息再返还回客户端.这是很简单感觉但也很直白说明的一种实现方式，基本上都是 <code>等待响应 -&gt; 发送信息 -&gt; 处理信息 -&gt; 返回信息</code> 这样即完成了一次通信.下面我们先来看看代码的实现其实就是昨天的<code>service代码</code>以及今天新增的<code>client代码</code>, 然后在讲讲她们的实现过程.</p><h2 id="创建两个文件"><a href="#创建两个文件" class="headerlink" title="创建两个文件"></a>创建两个文件</h2><ul><li>server.py</li><li>client.py</li></ul><h3 id="server-py"><a href="#server-py" class="headerlink" title="server.py"></a>server.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Main</span><span class="params">()</span>:</span></span><br><span class="line">    host = <span class="string">"127.0.0.1"</span></span><br><span class="line">    port = <span class="number">5000</span></span><br><span class="line">     </span><br><span class="line">    mySocket = socket.socket()</span><br><span class="line">    mySocket.bind((host,port))</span><br><span class="line">     </span><br><span class="line">    mySocket.listen(<span class="number">1</span>)</span><br><span class="line">    conn, addr = mySocket.accept()</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"Connection from: "</span> + str(addr))</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            data = conn.recv(<span class="number">1024</span>).decode()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"from connected  user: "</span> + str(data))</span><br><span class="line">             </span><br><span class="line">            data = str(data).upper()</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"sending: "</span> + str(data))</span><br><span class="line">            conn.send(data.encode())</span><br><span class="line">             </span><br><span class="line">    conn.close()</span><br><span class="line">     </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    Main()</span><br></pre></td></tr></table></figure><p>下面我们来看看上面的服务端代码做了什么</p><ol><li>首先我们导入了Python的Socket库</li><li>接着我们定义了 <code>main</code> 函数</li><li>我们定义了两个变量 <code>host</code> 以及 <code>port</code> 用于保存服务端接受数据的IP地址和端口，这里是本地网所以往往就是 <code>127.0.0.1</code>, <code>5000</code> 端口只是我随意选择的一个如果你自己也可以随意选择一个另外的，只是这里需要注意一下必须是超过1024的端口号，因为&lt;=1024是系统预留的，不然会引起不必要的麻烦比如23 24 53 80 8080这些等等.</li><li>之后我们定义了一个变量 <code>mySocket</code>, 这是Python socket的一个实例</li><li>在服务端我们必须要绑定IP地址和端口号，调用的方法是 <code>.bind()</code> . 这里需要注意的是 <code>.bind()</code> 接受的是一个Tuple. 因此我用了<code>双括号</code>. 其实你也可以写成 <code>address = (&quot;127.0.0.1&quot;, 5000)</code> 然后直接传入 <code>.bind</code> 也可以。上面的写法更便于理解而已.</li><li>接下来我们调用了 <code>.listen()</code> 并且给了个<code>1</code>给她，意思就是开始持续地监听上面我们绑定的IP地址下面的<code>5000</code>端口直到我们关闭连接.</li><li>一切都设置好了，那么我们怎么知道 <code>Who</code> 发送过来的 <code>What</code> 呢，我们就定义了两个变量 <code>conn连接</code> 和 <code>addr地址</code> 用来保存这两个东西.</li><li>While 循环中就是server代码的核心了. 我们知道连接已经建立起来的那么久设置了一个<code>while True</code>的循环用于等待接收接下来 <code>client.py</code>发送过来的信息，但这个过程当中连接状态是没有关闭的. 我们申明了一个变量 <code>data</code> 用于接收客户端发送过来的数据并且解码了它, 这里非常注意在Python3中使用的是<code>decode</code>而不是<code>str()</code>来转换buffer的数据了. <code>.rect(1024)</code>中的1024是缓存接受到数据的一个大小.</li><li>接下来把接收到的data进行处理, 判断是否为空 转换大小写 打印接收到的数据等等 内部的一些操作. 之后把加工完的数据在<code>.encode()</code>之后通过<code>.send()</code>返回给客户端.</li><li>直到我们的客户端不再发送信息过来的时候我们就调用 <code>.close()</code>来关闭这个连接了。或者自己关闭服务端的运行.</li></ol><h3 id="client-py"><a href="#client-py" class="headerlink" title="client.py"></a>client.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Main</span><span class="params">()</span>:</span></span><br><span class="line">        host = <span class="string">'127.0.0.1'</span></span><br><span class="line">        port = <span class="number">5000</span></span><br><span class="line">         </span><br><span class="line">        mySocket = socket.socket()</span><br><span class="line">        mySocket.connect((host,port))</span><br><span class="line">         </span><br><span class="line">        message = input(<span class="string">" -&gt; "</span>)</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">while</span> message != <span class="string">'q'</span>:</span><br><span class="line">                mySocket.send(message.encode())</span><br><span class="line">                data = mySocket.recv(<span class="number">1024</span>).decode()</span><br><span class="line">                 </span><br><span class="line">                <span class="keyword">print</span> (<span class="string">'Received from server: '</span> + data)</span><br><span class="line">                 </span><br><span class="line">                message = input(<span class="string">" -&gt; "</span>)</span><br><span class="line">                 </span><br><span class="line">        mySocket.close()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    Main()</span><br></pre></td></tr></table></figure><p>我们来看看客户端做了些什么, 和服务端很差不多其相似的地方就简单带过。</p><ol><li>导入socket库，申明变量用于存放IP地址、端口、Socket实例等</li><li>不同于server端需要的是 <code>.bind()</code> 绑定，客户端需要的是 <code>.connect()</code> 连接, 这里注意地址和端口都是服务端的。很容易理解，你要写信给别人就需要填写对方的收信地址和收件人。</li><li>接下来就是等待我们出入需要发送的信息，直到输入的内容是<code>q</code>就关闭这个连接， 同时由于服务端收到了关闭连接的状态，也会关闭这个connection</li></ol><h1 id="Let’s-runing-it"><a href="#Let’s-runing-it" class="headerlink" title="Let’s runing it"></a>Let’s runing it</h1><h2 id="Server-1"><a href="#Server-1" class="headerlink" title="Server"></a>Server</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; python3 server.py</span><br><span class="line">Connection from: (<span class="string">'127.0.0.1'</span>, 53703)</span><br><span class="line">from connected  user: I am Simon</span><br><span class="line">sending: I AM SIMON</span><br><span class="line">from connected  user: This is a <span class="built_in">test</span></span><br><span class="line">sending: THIS IS A TEST</span><br></pre></td></tr></table></figure><h2 id="Client-1"><a href="#Client-1" class="headerlink" title="Client"></a>Client</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; python3 client.py</span><br><span class="line"> -&gt; I am Simon</span><br><span class="line">Received from server: I AM SIMON</span><br><span class="line"> -&gt; This is a <span class="built_in">test</span></span><br><span class="line">Received from server: THIS IS A TEST</span><br><span class="line"> -&gt; q</span><br></pre></td></tr></table></figure><p> EOF.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;昨天的&lt;a href=&quot;/2018/07/15/Why-there-are-only-request-response-mo
      
    
    </summary>
    
    
      <category term="Python" scheme="https://blog.codewalker.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Why there are only request-response model but how to explain push</title>
    <link href="https://blog.codewalker.me/2018/07/15/Why-there-are-only-request-response-model-but-how-to-explain-push/"/>
    <id>https://blog.codewalker.me/2018/07/15/Why-there-are-only-request-response-model-but-how-to-explain-push/</id>
    <published>2018-07-14T17:47:59.000Z</published>
    <updated>2018-07-17T09:10:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Why-there-are-only-request-response-model-but-how-to-explain-push"><a href="#Why-there-are-only-request-response-model-but-how-to-explain-push" class="headerlink" title="Why there are only request-response model but how to explain push"></a>Why there are only request-response model but how to explain push</h2><p>今天看帖子浏览到一篇文章讲<a href="http://cizixs.com/2015/09/21/what-is-a-web-framework" target="_blank" rel="noopener"><code>什么是 web 框架</code>what-is-a-web-framework</a>其中说到<code>HTTP 协议的基础是 请求-应答 (request-response) 模型</code>看到这里我突然就萌发了一个疑问。因为这里说到<code>request-response model</code>那么就是主动的一个请求 应答的过程，从<code>客户端请求-request</code>到<code>web server-response</code>的应答。那么这又怎么解释<code>push(推送)</code>呢？先把挖个坑在这.好吧其实这片文章真正的题目叫做</p><h3 id="Python-3-socket-programming-example"><a href="#Python-3-socket-programming-example" class="headerlink" title="Python 3 socket programming example"></a>Python 3 socket programming example</h3><h4 id="Server端"><a href="#Server端" class="headerlink" title="Server端"></a>Server端</h4><p>上面文章中给出了一个最基本的socket的例子但是是2.x版本的。这里提供一个3.x版本的<br>把下面的代码保存为<code>socket_base.py</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-07-15 00:56:20</span></span><br><span class="line"><span class="comment"># @Author  : Simon (simon.xie@codewalker.meg)</span></span><br><span class="line"><span class="comment"># @Link    : http://www.codewalker.me</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    host = <span class="string">"127.0.0.1"</span></span><br><span class="line">    port = <span class="number">5000</span></span><br><span class="line">     </span><br><span class="line">    mySocket = socket.socket()</span><br><span class="line">    mySocket.bind((host,port))</span><br><span class="line">     </span><br><span class="line">    mySocket.listen(<span class="number">1</span>)</span><br><span class="line">    conn, addr = mySocket.accept()</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"Connection from: "</span> + str(addr))</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            data = conn.recv(<span class="number">1024</span>).decode()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"from connected  user: "</span> + str(data))</span><br><span class="line">             </span><br><span class="line">            data = str(data).upper()</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"sending: "</span> + str(data))</span><br><span class="line">            conn.send(data.encode())</span><br><span class="line">             </span><br><span class="line">    conn.close()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></p><p>在终端A执行<code>python3 socket_base.py</code></p><h4 id="Client端"><a href="#Client端" class="headerlink" title="Client端"></a>Client端</h4><p>然后在开一个终端B执行<code>curl http://127.0.0.1:5000</code><br>在A中可以看到来自B的请求<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; python3 ./base_socket.py</span><br><span class="line">Connection from: (<span class="string">'127.0.0.1'</span>, 50285)</span><br><span class="line">from connected  user: GET / HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:5000</span><br><span class="line">User-Agent: curl/7.54.0</span><br><span class="line">Accept: */*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sending: GET / HTTP/1.1</span><br><span class="line">HOST: 127.0.0.1:5000</span><br><span class="line">USER-AGENT: CURL/7.54.0</span><br><span class="line">ACCEPT: */*</span><br></pre></td></tr></table></figure></p><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>可以看出来B通过127.0.0.1的50285端口发送了get request到5000.<code>注: 本地请求所以都是127.0.0.1</code>得到下面的结果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;HTTP Method&gt; &lt;URL&gt; &lt;HTTP version&gt;</span><br><span class="line">GET / HTTP/1.1</span><br></pre></td></tr></table></figure></p><p>在b中可以看到<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; curl http://127.0.0.1:5000</span><br><span class="line">GET / HTTP/1.1</span><br><span class="line">HOST: 127.0.0.1:5000</span><br><span class="line">USER-AGENT: CURL/7.54.0</span><br><span class="line">ACCEPT: */*</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Why-there-are-only-request-response-model-but-how-to-explain-push&quot;&gt;&lt;a href=&quot;#Why-there-are-only-request-response-model-but-how-to-ex
      
    
    </summary>
    
    
      <category term="python" scheme="https://blog.codewalker.me/tags/python/"/>
    
      <category term="socket" scheme="https://blog.codewalker.me/tags/socket/"/>
    
  </entry>
  
  <entry>
    <title>whats wrong with npm</title>
    <link href="https://blog.codewalker.me/2018/07/14/whats-wrong-with-npm/"/>
    <id>https://blog.codewalker.me/2018/07/14/whats-wrong-with-npm/</id>
    <published>2018-07-14T10:42:25.000Z</published>
    <updated>2018-07-14T11:14:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WTF-不知道为啥升级Node导致了npm用不了了"><a href="#WTF-不知道为啥升级Node导致了npm用不了了" class="headerlink" title="WTF 不知道为啥升级Node导致了npm用不了了"></a>WTF 不知道为啥升级Node导致了npm用不了了</h2><h3 id="悲剧的起源还是来自于最近折腾的Hexo"><a href="#悲剧的起源还是来自于最近折腾的Hexo" class="headerlink" title="悲剧的起源还是来自于最近折腾的Hexo"></a>悲剧的起源还是来自于最近折腾的Hexo</h3><h4 id="hexo-wordcount"><a href="#hexo-wordcount" class="headerlink" title="hexo-wordcount"></a>hexo-wordcount</h4><p>悲剧的开始是之前在安装<code>hexo-wordcount</code>的时候一直给我说<code>Error: Unable to call &#39;wordcount&#39;, which is undefined or falsey</code>就以为是这个插件安装的时候的问题，在反复<code>安装 卸载 安装 卸载</code>*n</p><h4 id="难道是nunjucks转义出问题了"><a href="#难道是nunjucks转义出问题了" class="headerlink" title="难道是nunjucks转义出问题了?"></a>难道是nunjucks转义出问题了?</h4><p>非法字符又去修改<code>nunjucks</code>中的转义文件<code>src/lib.js</code>完全是在乱弄。</p><h4 id="难道是npm出问题了"><a href="#难道是npm出问题了" class="headerlink" title="难道是npm出问题了?"></a>难道是npm出问题了?</h4><p>结果还是不行索性重装了<code>npm</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -0 -L http://npmjs.org/install.sh | sudo sh</span><br></pre></td></tr></table></figure><p>欲哭无泪的感觉一样还是不行，现在到好了<code>npm -v</code>都不行了。可是尼玛明明node全家桶已经安装好了啊。<br>于是<code>which npm</code>查看尼玛 npm木有了。<br>现在才想起来Node全家桶是拿<code>Brew</code>装的哦<br>如果我再手动安装肯定会有冲突我这不是在脑残是什么.</p><h4 id="难道是Node版本不匹配"><a href="#难道是Node版本不匹配" class="headerlink" title="难道是Node版本不匹配?"></a>难道是Node版本不匹配?</h4><p>那么就<code>reinstall node 到最新版</code>吧很简单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; node -v</span><br><span class="line">v10.6.0</span><br><span class="line">brew reisntall node</span><br></pre></td></tr></table></figure><p>肯定没问题撒，老司机出马安个软件还会有问题吗?结果悲剧又发生了…<br>安装完之后告诉我说需要<code>brew postinstall node</code><br>WHT</p><blockquote><p>  Permission denied @ rb_sysopen - /usr/local/lib/node_modules/npm/.npmignore<br>    /usr/local/lib/node_modules<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">drwxr-xr-x   9 codewalkertes  admin   288B Nov 23  2017 cnpm</span><br><span class="line">drwxr-xr-x   9 codewalkertes  admin   288B Nov 23  2017 express</span><br><span class="line">drwxr-xr-x   9 codewalkertes  admin   288B Nov 23  2017 grunt-cli</span><br><span class="line">drwxr-xr-x  16 codewalkertes  admin   512B Jul 13 17:58 hexo-cli</span><br><span class="line">drwxr-xr-x   7 codewalkertes  admin   224B Jul 14 15:59 n</span><br><span class="line">drwxr-xr-x  25 root           admin   800B Jul 14 16:07 npm</span><br></pre></td></tr></table></figure></p></blockquote><p>看吧自己种下的恶果还是要自己吃下去才行。都是因为之前sudo安装造成的。不怕生命还是在于折腾把虽然这都三十好几了.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R codewalkertes npm</span><br></pre></td></tr></table></figure></p><h2 id="Voila"><a href="#Voila" class="headerlink" title="Voilà"></a>Voilà</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm -v</span><br><span class="line">6.1.0</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>遇到问题了还是要想办法<code>debug</code>, 这次主要原因还是因为手动安装和Brew安装起了冲突所致。<br>总结嘛吃一堑长一智，不过有时候真是也因为记性的原因或者现代软件包管理的原因太过于复杂了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;WTF-不知道为啥升级Node导致了npm用不了了&quot;&gt;&lt;a href=&quot;#WTF-不知道为啥升级Node导致了npm用不了了&quot; class=&quot;headerlink&quot; title=&quot;WTF 不知道为啥升级Node导致了npm用不了了&quot;&gt;&lt;/a&gt;WTF 不知道为啥升级
      
    
    </summary>
    
    
      <category term="MacOS" scheme="https://blog.codewalker.me/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>what plugs I installed</title>
    <link href="https://blog.codewalker.me/2018/07/14/what-plugs-I-installed/"/>
    <id>https://blog.codewalker.me/2018/07/14/what-plugs-I-installed/</id>
    <published>2018-07-14T07:00:06.000Z</published>
    <updated>2018-07-14T11:14:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>迁移到Hexo之后首要的是先学习MD语法其次再慢慢的安装一些适合的插件，这里就慢慢的列出来吧</p><h3 id="订阅"><a href="#订阅" class="headerlink" title="订阅"></a>订阅</h3><p>首先是订阅订阅插件, 虽然没什么人看为了方便还是提供一下这个功能吧 嘻嘻~</p><ol><li><p>在你的项目文件的根目录执行，先安装<code>hexo-generator-feed</code>插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure></li><li><p>编辑Hexo的配置文件<code>_config.yml</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure><p>找到<code>#Extensions</code> 之后添加变成这样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">plugins: hexo-generate-feed</span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line">feed:</span><br><span class="line">    <span class="built_in">type</span>: atom</span><br><span class="line">    path: atom.xml</span><br><span class="line">    <span class="built_in">limit</span>: 20</span><br></pre></td></tr></table></figure></li><li><p>生成<code>rss文件</code>就可以看到效果了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>之后就可以看到<code>/public/atom.xml</code>已经按照上面配置的参数生成了</p></li></ol><h3 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h3><ol><li><p>安装<code>hexo-wordcount</code>字数统计</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure></li><li><p>随便在<code>footer</code>或者什么通用文件的最下面加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=<span class="string">"post-count"</span>&gt;Words count: wordcount(site) 字&lt;/span&gt;</span><br></pre></td></tr></table></figure></li></ol><ul><li>notice *<br>这里可能会遇见<code>Error: Unable to call</code>wordcount<code>, which is undefined or falsey</code>的问题那是因为node版本太低所致<br>可以安装低版本的<code>words count</code>或者升级<code>node</code></li></ul><h4 id="查看升级Node"><a href="#查看升级Node" class="headerlink" title="查看升级Node"></a>查看升级Node</h4><p>然后嫩，悲剧的事情发生了导致npm直接<code>command not found: npm</code>这就是后话了可以<a href="#">查看杯具</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;迁移到Hexo之后首要的是先学习MD语法其次再慢慢的安装一些适合的插件，这里就慢慢的列出来吧&lt;/p&gt;
&lt;h3 id=&quot;订阅&quot;&gt;&lt;a href=&quot;#订阅&quot; class=&quot;headerlink&quot; title=&quot;订阅&quot;&gt;&lt;/a&gt;订阅&lt;/h3&gt;&lt;p&gt;首先是订阅订阅插件, 虽然没什么
      
    
    </summary>
    
    
      <category term="杂谈" scheme="https://blog.codewalker.me/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>hello hexo</title>
    <link href="https://blog.codewalker.me/2018/07/14/hello-hexo/"/>
    <id>https://blog.codewalker.me/2018/07/14/hello-hexo/</id>
    <published>2018-07-13T16:08:51.000Z</published>
    <updated>2018-07-17T09:09:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天终于把github+hexo搭建好了中间也踩了不少的坑也要感谢前辈们在网上分享的经验,感谢在最后.</p><ol><li><p>首先是发布不了<br> Google了之后才发现是没有安装发布插件，很简单装好就ok了</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>然后是</p><blockquote><p>Deployer not found: git</p></blockquote><p> Google了两分钟，都说的是1的问题。想应该是repo地址的问题，不应该是http的地址，应为按照教程来说之前配置过ssh那么就应该是ssh的方式commit，那么立即改成ssh git地址， it’s works。</p><p> 修改_config.yml中找到repo</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    git@github.com:codewalkertse/codewalkertse.github.io.git</span><br><span class="line">    ``` </span><br><span class="line"></span><br><span class="line">3. 这个问题更无厘头了。已经commit了为啥给我显示 ` There isn<span class="string">'t a GitHub Pages site here. ` 喃？</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    还是来修改_config.yml找到 &gt; url: 修改成</span></span><br><span class="line"><span class="string">    ``` bash</span></span><br><span class="line"><span class="string">    url: https://codewalkertse.github.io</span></span><br></pre></td></tr></table></figure><p> ok 这样就可以直接访问<a href="https://codewalkertse.github.io" target="_blank" rel="noopener">我的hexo]</a>搭建的最初版本了</p><ul><li>之后绑定了自己域名方法可以看<a href="/2018/07/15/hexo-bind-your-onw-domain/">这里</a></li></ul></li><li><p>接下来Gitment的问题需要详细阅读<a href="https://imsun.net/posts/gitment-introduction/" target="_blank" rel="noopener">这里</a></p></li></ol><p>感谢</p><pre><code>- [baixin.io](http://baixin.io) - [jsyzchen](https://segmentfault.com/a/1190000005624504) - [formulahendry](https://formulahendry.github.io/2016/12/04/hexo-ci/)</code></pre><p>Markdown语法还不是很熟悉排版简直惨不忍睹见谅</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天终于把github+hexo搭建好了中间也踩了不少的坑也要感谢前辈们在网上分享的经验,感谢在最后.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先是发布不了&lt;br&gt; Google了之后才发现是没有安装发布插件，很简单装好就ok了&lt;/p&gt;
 &lt;figure class=&quot;highl
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://blog.codewalker.me/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>python reverse iterator and generator ways</title>
    <link href="https://blog.codewalker.me/2018/07/12/python-reverse-iterator-way/"/>
    <id>https://blog.codewalker.me/2018/07/12/python-reverse-iterator-way/</id>
    <published>2018-07-12T15:30:50.000Z</published>
    <updated>2018-07-14T03:22:22.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line">\<span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">\<span class="comment"># @Date    : 2018-07-12 23:20:45</span></span><br><span class="line">\<span class="comment"># @Author  : Simon (simon.xie@codewalker.meg)</span></span><br><span class="line">\<span class="comment"># @Link    : http://www.codewalker.me</span></span><br><span class="line">\<span class="comment"># @Version : 1.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ReverseIterator</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> \<span class="title">_</span>\<span class="title">_init</span>\<span class="title">_</span>\<span class="title">_</span><span class="params">(self, str_data)</span>:</span></span><br><span class="line">        self.str\_data = str\_data</span><br><span class="line">        self.index = len(str_data)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> \<span class="title">_</span>\<span class="title">_iter</span>\<span class="title">_</span>\<span class="title">_</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line">    <span class="function"><span class="keyword">def</span> \<span class="title">_</span>\<span class="title">_next</span>\<span class="title">_</span>\<span class="title">_</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.index == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> StopIteration</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.index = self.index - <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> self.str_data\[self.index\]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reservse_genertor</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> range(len(data)<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">        <span class="keyword">yield</span> data\[index\]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    example_string = <span class="string">'simon.xie'</span> </span><br><span class="line">    ri = ReverseIterator(example_string)</span><br><span class="line">    new\_str\_list = \[\]</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> ri:</span><br><span class="line">        new\_str\_list.append(char)</span><br><span class="line">    print(<span class="string">''</span>.join(new\_str\_list))</span><br><span class="line"></span><br><span class="line">    other\_str\_list = \[\]</span><br><span class="line">    rg = reservse\_genertor(example\_string)</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> rg:</span><br><span class="line">        other\_str\_list.append(char)</span><br><span class="line">    print(<span class="string">''</span>.join(other\_str\_list))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> \_\_name\_\_ == <span class="string">"\_\_main\_\_"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="python" scheme="https://blog.codewalker.me/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>python fib nums using iterator</title>
    <link href="https://blog.codewalker.me/2018/07/12/python-fib-nums-using-iterator/"/>
    <id>https://blog.codewalker.me/2018/07/12/python-fib-nums-using-iterator/</id>
    <published>2018-07-12T15:11:14.000Z</published>
    <updated>2018-07-13T12:49:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>#!/usr/bin/env python3<br># -<em>- coding: utf-8 -</em>-<br># @Date    : 2018-07-12 22:59:07<br># @Author  : Simon (<a href="mailto:simon.xie@codewalker.meg" target="_blank" rel="noopener">simon.xie@codewalker.meg</a>)<br># @Link    : <a href="http://www.codewalker.me" target="_blank" rel="noopener">http://www.codewalker.me</a><br># @Version : 1.0.0</p><p>class Fib:<br>    def __init__(self):<br>        self.prev = 0<br>        self.curr = 1<br>    def __iter__(self):<br>        return self<br>    def __next__(self):<br>        self.curr, self.prev = self.prev + self.curr, self.curr<br>        return self.curr</p><p>def main():<br>    fib = Fib()<br>    fib_list = []<br>    for _ in range(10):<br>        fib_list.append(next(fib))<br>    print(fib_list)<br>if __name__ == “__main__“:<br>    main()</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#!/usr/bin/env python3&lt;br&gt;# -&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;br&gt;# @Date    : 2018-07-12 22:59:07&lt;br&gt;# @Author  : Simon (&lt;a href=&quot;mailto:simon
      
    
    </summary>
    
      <category term="python" scheme="https://blog.codewalker.me/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>python fib nums using generator</title>
    <link href="https://blog.codewalker.me/2018/07/12/python-fib-nums-using-generator/"/>
    <id>https://blog.codewalker.me/2018/07/12/python-fib-nums-using-generator/</id>
    <published>2018-07-12T14:57:50.000Z</published>
    <updated>2018-07-13T12:49:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>#!/usr/bin/env python3<br># -<em>- coding: utf-8 -</em>-<br># @Date    : 2018-07-12 22:48:30<br># @Author  : Simon (<a href="mailto:simon.xie@codewalker.meg" target="_blank" rel="noopener">simon.xie@codewalker.meg</a>)<br># @Link    : <a href="http://www.codewalker.me" target="_blank" rel="noopener">http://www.codewalker.me</a><br># @Version : 1.0.0</p><p>def fib_num_generator():<br>    a, b = 0, 1<br>    while True:<br>        a, b = b, a + b<br>        yield a</p><p>def main():<br>    f = fib_num_generator()<br>    fib_list = []<br>    for _ in range(10):<br>        fib_list.append(next(f))<br>    print(fib_list)<br>if __name__ == “__main__“:<br>    main()</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#!/usr/bin/env python3&lt;br&gt;# -&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;br&gt;# @Date    : 2018-07-12 22:48:30&lt;br&gt;# @Author  : Simon (&lt;a href=&quot;mailto:simon
      
    
    </summary>
    
      <category term="python" scheme="https://blog.codewalker.me/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>python iterator generator yield first look</title>
    <link href="https://blog.codewalker.me/2018/07/12/python-iterator-generator-yield-first-look/"/>
    <id>https://blog.codewalker.me/2018/07/12/python-iterator-generator-yield-first-look/</id>
    <published>2018-07-12T14:29:14.000Z</published>
    <updated>2018-07-13T12:49:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>#!/usr/bin/env python3<br># -<em>- coding: utf-8 -</em>-<br># @Date    : 2018-07-12 16:14:53<br># @Author  : Simon (<a href="mailto:simon.xie@codewalker.meg" target="_blank" rel="noopener">simon.xie@codewalker.meg</a>)<br># @Link    : <a href="http://www.codewalker.me" target="_blank" rel="noopener">http://www.codewalker.me</a><br># @Version : 1.0.0<br>a_list = [ x  for x in range(5)]<br>print(‘we have a list: {}’.format(a_list))<br>pick_one_item = iter(a_list)<br>print(next(pick_one_item))<br>print(next(pick_one_item))<br>print(next(pick_one_item))<br>print(next(pick_one_item))<br>print(next(pick_one_item))<br># print(next(pick_one_item))<br># Traceback (most recent call last):<br>#   File “/Users/codewalkertes/Documents/script/python/yield_produce_consume.py”, line 15, in #     print(next(pick_one_item))<br># StopIteration<br>print(‘now we can see each of them we call next(), it will pick one item of list’)<br>print(‘But notic that it will throght out a stopIteration exception when cross the bounds’)<br>print(‘-‘*20)</p><p>def native_way(n):<br>    num, nums = 0, []<br>    while num &lt; n:<br>        nums.append(num)<br>        num += 1<br>    return nums</p><p>def genrator_way(n):<br>    num = 0<br>    while num &lt; n:<br>        yield num<br>        num += 1<br>print(sum(native_way(100)))<br>print(sum(genrator_way(100)))<br>print(‘-‘*20)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#!/usr/bin/env python3&lt;br&gt;# -&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;br&gt;# @Date    : 2018-07-12 16:14:53&lt;br&gt;# @Author  : Simon (&lt;a href=&quot;mailto:simon
      
    
    </summary>
    
      <category term="python" scheme="https://blog.codewalker.me/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>tax calculator</title>
    <link href="https://blog.codewalker.me/2018/07/12/tax-calculator/"/>
    <id>https://blog.codewalker.me/2018/07/12/tax-calculator/</id>
    <published>2018-07-12T09:24:58.000Z</published>
    <updated>2018-07-13T12:49:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>#!/usr/bin/env python3<br># -<em>- coding: utf-8 -</em>-<br># @Date    : 2018-07-12 16:14:53<br># @Author  : Simon (<a href="mailto:simon.xie@codewalker.meg" target="_blank" rel="noopener">simon.xie@codewalker.meg</a>)<br># @Link    : <a href="http://www.codewalker.me" target="_blank" rel="noopener">http://www.codewalker.me</a><br># @Version : 1.0.0</p><p>import sys, bisect</p><p>def tax_calculator(income):<br>    if income &lt; 5000:<br>        return 0.0<br>    above = income - 5000<br>    ranges = [ 0, 1500, 4500, 9000, 35000, 55000, 80000 ]<br>    rate = [ .03, .1, .2, .25, .30, .35, .45 ]<br>    i =  bisect.bisect_left(ranges, above)<br>    j = 0<br>    tax = 0.0<br>    while j &lt; i:<br>        if j + 1 &lt; i:<br>            tax += (ranges[j+1]-ranges[j])<em>rate[j]<br>        else:<br>            tax += (above-ranges[j]) </em> rate[j]<br>        j += 1<br>    return tax<br>def main(income):<br>    tax = tax_calculator(income)<br>    print(‘Tax is {}’.format(tax))</p><p>if __name__ == “__main__“:<br>    if len(sys.argv) &lt; 2:<br>        print(‘Usage: {} ‘.format(sys.argv[0]))<br>        sys.exit(1)<br>    main(float(sys.argv[1]))</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#!/usr/bin/env python3&lt;br&gt;# -&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;br&gt;# @Date    : 2018-07-12 16:14:53&lt;br&gt;# @Author  : Simon (&lt;a href=&quot;mailto:simon
      
    
    </summary>
    
      <category term="python" scheme="https://blog.codewalker.me/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>mysql ORDER BY Optimization</title>
    <link href="https://blog.codewalker.me/2018/07/12/mysql-order-by-optimization/"/>
    <id>https://blog.codewalker.me/2018/07/12/mysql-order-by-optimization/</id>
    <published>2018-07-12T04:39:22.000Z</published>
    <updated>2018-07-13T14:20:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>See table structure<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">desc t1;</span><br><span class="line">+<span class="comment">----+-----+</span></span><br><span class="line">| id | num |</span><br><span class="line">+<span class="comment">----+-----+</span></span><br><span class="line">|  1 |  -1 |</span><br><span class="line">|  2 |   0 |</span><br><span class="line">|  3 |   1 |</span><br><span class="line">|  4 |   2 |</span><br><span class="line">|  5 |   3 |</span><br><span class="line">|  6 |   4 |</span><br><span class="line">|  7 |   5 |</span><br><span class="line">+<span class="comment">----+-----+</span></span><br></pre></td></tr></table></figure></p><p>How to get a result by select which is num=3 at the first of list? #1</p><p>select * from t1 order by case when num = 3 then 1 else 0 end desc, num asc;</p><p>Making suborder, it will make a subfield invisible when num=3 and it’s value is 1 and others is 0. #2<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">field</span>(<span class="keyword">num</span>,<span class="number">3</span>) <span class="keyword">desc</span>,<span class="keyword">num</span> <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure></p><p>Same way to do it again. Than we can get select result like this:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">idnum</span><br><span class="line">53</span><br><span class="line">1-1</span><br><span class="line">20</span><br><span class="line">31</span><br><span class="line">42</span><br><span class="line">64</span><br><span class="line">75</span><br></pre></td></tr></table></figure></p><p>Those are super genius ways to pick some row out for some reason. but #1 is more easier to comprehend. 今天干活的时候遇到了一个非常无语的问题，产品列表中因为业务问题又又又又又又要调整顺序。 谁让他是老板呢 就是这么随性。 这次是一个很少用到的特别的排序问题。需要把某个Column等于特殊值的rows放在前面。 几经搜索后发现了上面的方法。其实就是分条件搜索都一种应用，case then 更便于理解. EOF.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;See table structure&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
      <category term="database" scheme="https://blog.codewalker.me/categories/database/"/>
    
    
  </entry>
  
  <entry>
    <title>hailstone Python_alogorithm</title>
    <link href="https://blog.codewalker.me/2018/07/07/hailstone-python-alogorithm/"/>
    <id>https://blog.codewalker.me/2018/07/07/hailstone-python-alogorithm/</id>
    <published>2018-07-07T14:43:50.000Z</published>
    <updated>2018-07-13T13:56:16.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3 </span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*- </span></span><br><span class="line"><span class="comment"># @Date : 2018-07-07 17:23:04 </span></span><br><span class="line"><span class="comment"># @Author : Simon (simon.xie@codewalker.meg) </span></span><br><span class="line"><span class="comment"># @Link : http://www.codewalker.me </span></span><br><span class="line"><span class="comment"># @Version : 1.0.0 </span></span><br><span class="line"><span class="keyword">import</span> os </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hailstone</span><span class="params">(n)</span>:</span> </span><br><span class="line">  hai_list = [] </span><br><span class="line">  <span class="keyword">while</span> n &gt; <span class="number">1</span>: </span><br><span class="line">    hai_list.append(n) </span><br><span class="line">    <span class="keyword">if</span> n%<span class="number">2</span>: </span><br><span class="line">    <span class="comment">#奇数 </span></span><br><span class="line">      n = <span class="number">3</span>*n + <span class="number">1</span> </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">    <span class="comment">#偶数 </span></span><br><span class="line">      n = n//<span class="number">2</span> </span><br><span class="line">  <span class="keyword">else</span>: </span><br><span class="line">    hai_list.append(<span class="number">1</span>) </span><br><span class="line">  <span class="keyword">return</span> hai_list </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_result</span><span class="params">(r)</span>:</span> </span><br><span class="line">  length=len(r) </span><br><span class="line">  print(<span class="string">'list:&#123;list&#125;\nlength:&#123;length&#125;'</span>.format(list=r,length=length)) </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>: </span><br><span class="line">  print_result(hailstone(<span class="number">7</span>)) </span><br><span class="line">  print(<span class="string">'*'</span>*<span class="number">80</span>) print_result(hailstone(<span class="number">27</span>))`</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="python" scheme="https://blog.codewalker.me/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>sum_recursion python_alogorithm</title>
    <link href="https://blog.codewalker.me/2018/07/07/sum-recursion-python-alogorithm/"/>
    <id>https://blog.codewalker.me/2018/07/07/sum-recursion-python-alogorithm/</id>
    <published>2018-07-07T14:42:09.000Z</published>
    <updated>2018-07-17T09:08:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>Talk is cheap</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-07-07 21:54:33</span></span><br><span class="line"><span class="comment"># @Author  : Simon (simon.xie@codewalker.meg)</span></span><br><span class="line"><span class="comment"># @Link    : http://www.codewalker.me</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_list</span><span class="params">(length=<span class="number">10</span>)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> [ randint(<span class="number">0</span>,<span class="number">10</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(length) ]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*arg, **kwargs)</span>:</span></span><br><span class="line">        <span class="comment"># --- 附加功能 ---</span></span><br><span class="line">        print(<span class="string">'calling&#123;&#125;..'</span>.format(func.__name__))</span><br><span class="line">        <span class="keyword">return</span> func(*arg, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@wrapper</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_normal</span><span class="params">(l)</span>:</span></span><br><span class="line">    sum_for_list = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">        sum_for_list += i</span><br><span class="line">    <span class="keyword">return</span> sum_for_list</span><br><span class="line">    </span><br><span class="line"><span class="meta">@wrapper</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_recursion</span><span class="params">(l)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> l == []:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> l[<span class="number">0</span>] + sum_recursion(l[<span class="number">1</span>:])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    l = create_list(<span class="number">3</span>)    </span><br><span class="line">    print(<span class="string">'list:&#123;l&#125;\nsum:&#123;sum&#125;'</span>.format(l=l,sum=sum_normal(l)))</span><br><span class="line">    print(<span class="string">'-'</span>*<span class="number">80</span>)</span><br><span class="line">    print(<span class="string">'list:&#123;l&#125;\nsum:&#123;sum&#125;'</span>.format(l=l,sum=sum_recursion(l)))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;Talk is cheap&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span c
      
    
    </summary>
    
      <category term="python" scheme="https://blog.codewalker.me/categories/python/"/>
    
    
      <category term="python" scheme="https://blog.codewalker.me/tags/python/"/>
    
      <category term="alogorithm" scheme="https://blog.codewalker.me/tags/alogorithm/"/>
    
  </entry>
  
  <entry>
    <title>#WTH url_for with Flask</title>
    <link href="https://blog.codewalker.me/2018/07/04/wth-url-for-with-flask/"/>
    <id>https://blog.codewalker.me/2018/07/04/wth-url-for-with-flask/</id>
    <published>2018-07-04T08:33:40.000Z</published>
    <updated>2018-07-13T14:27:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://codewalker.me/wp-content/uploads/2018/07/1530692660635.jpg" alt="flask url_for"> </p><h3 id="The-endpoint-in-url-for-MUST-be-your-function-name-NOT-your-auth-route-path"><a href="#The-endpoint-in-url-for-MUST-be-your-function-name-NOT-your-auth-route-path" class="headerlink" title="The endpoint in url_for(), MUST be your function name. NOT your @auth.route path"></a>The endpoint in url_for(), MUST be your function name. NOT your @auth.route path</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://codewalker.me/wp-content/uploads/2018/07/1530692660635.jpg&quot; alt=&quot;flask url_for&quot;&gt; &lt;/p&gt;
&lt;h3 id=&quot;The-endpoint-in-url-for-MU
      
    
    </summary>
    
      <category term="web" scheme="https://blog.codewalker.me/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>Are you scare.</title>
    <link href="https://blog.codewalker.me/2018/06/10/are-you-scare/"/>
    <id>https://blog.codewalker.me/2018/06/10/are-you-scare/</id>
    <published>2018-06-10T12:37:45.000Z</published>
    <updated>2018-07-13T12:49:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>随着年岁的增加，随着社会阅历的丰富. 当你进入人生这场戏剧的剧场, 在窥视这幕布后面人性之后, 所感受到的Cthulhu式的恐惧感和无力感时. 年幼时心中的那些花朵, 早已不知在何时枯萎凋谢. 眼 不得不随着你的视野而打开; 脑 不得不随着你的经验而思考; 身 不得不随着你的体验而防御; 盔甲 不得不随着经历或未经历的事情而披上. 珍惜每一个应该珍惜的身边人， 即使你根本没有意识到他们或她们为了你付出了什么. 远离每一个应该远离的身边人， 即使你根本没有意识到他们或她们伤害你了什么. 即使身处黑暗的隧道之中， 但也不要忘记前方的光明 即使身处风雨之中， 但也不要忘记雨后的彩虹. May God bless you &amp; me. EOF</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;随着年岁的增加，随着社会阅历的丰富. 当你进入人生这场戏剧的剧场, 在窥视这幕布后面人性之后, 所感受到的Cthulhu式的恐惧感和无力感时. 年幼时心中的那些花朵, 早已不知在何时枯萎凋谢. 眼 不得不随着你的视野而打开; 脑 不得不随着你的经验而思考; 身 不得不随着你
      
    
    </summary>
    
      <category term="杂谈" scheme="https://blog.codewalker.me/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>DOWNLOAD FILES AND TRANSCODING THEN MAILING THEM ALL AUTOMATICALLY</title>
    <link href="https://blog.codewalker.me/2017/12/21/download-files-and-transcoding-then-mailing-them-all-automatically-3/"/>
    <id>https://blog.codewalker.me/2017/12/21/download-files-and-transcoding-then-mailing-them-all-automatically-3/</id>
    <published>2017-12-21T06:28:08.000Z</published>
    <updated>2018-07-13T14:00:06.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="comment">#version 2.1</span></span><br><span class="line"><span class="comment">#auther simon@codewalker.me</span></span><br><span class="line">LF=/var/<span class="built_in">log</span>/statement/daily/statement.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#current work directory</span></span><br><span class="line">CW=<span class="string">'/path/to/work/space'</span></span><br><span class="line">YESTERDAY=\`date +%Y%m%d -d <span class="string">'yesterday'</span>\`</span><br><span class="line"><span class="keyword">if</span> \[ <span class="variable">$1</span> \]; <span class="keyword">then</span></span><br><span class="line">YESTERDAY=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">download ()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> \[ -f <span class="string">"Statement/zip/<span class="variable">$YESTERDAY</span>.Statement.zip"</span> \]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Already sending <span class="variable">$YESTERDAY</span>.statement"</span> | tee -a <span class="variable">$LF</span></span><br><span class="line"><span class="built_in">read</span> -n1 -p <span class="string">"Do you want force to send mail \[Y|N\]? "</span> current_input</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$current_input</span> <span class="keyword">in</span></span><br><span class="line">Y|y)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Downloading <span class="variable">$&#123;YESTERDAY&#125;</span>_zhye-yh-cqg.zip file"</span> | tee -a <span class="variable">$LF</span></span><br><span class="line">curl <span class="string">"http://www.someurl.com/files"</span></span><br><span class="line">;;</span><br><span class="line">N|n)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Choice no. exit'</span> | tee -a <span class="variable">$LF</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> \[ ! -f <span class="string">"download/<span class="variable">$YESTERDAY</span>/<span class="variable">$YESTERDAY</span>"</span>_zhye-yh-cqg.zip \];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Downloading <span class="variable">$&#123;YESTERDAY&#125;</span>_zhye-yh-cqg.zip file"</span> | tee -a <span class="variable">$LF</span></span><br><span class="line">curl <span class="string">"http://www.someurl.com/files"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Found <span class="variable">$&#123;YESTERDAY&#125;</span>_*.zip zips will not download..."</span> | tee -a <span class="variable">$LF</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">makedirs()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> \[ ! -x <span class="string">"Statement/utf8/<span class="variable">$YESTERDAY</span>"</span> \]; <span class="keyword">then</span>  </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Making dirs utf8/<span class="variable">$YESTERDAY</span>"</span> | tee -a <span class="variable">$LF</span></span><br><span class="line">mkdir -p <span class="string">"Statement/utf8/<span class="variable">$YESTERDAY</span>/"</span> </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"dir Statement/utf8/<span class="variable">$YESTERDAY</span> existed."</span> |tee -a <span class="variable">$LF</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> \[ ! -x <span class="string">"Statement/zip/"</span> \]; <span class="keyword">then</span>  </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Making dir zip"</span> | tee -a <span class="variable">$LF</span></span><br><span class="line">mkdir -p <span class="string">"Statement/zip/"</span> </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'dir Statement/zip/ existed.'</span> | tee -a <span class="variable">$LF</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> \[ ! -x <span class="string">"Statement/GBK/<span class="variable">$YESTERDAY</span>"</span> \]; <span class="keyword">then</span>  </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Making dirs GBK/<span class="variable">$YESTERDAY</span>"</span> | tee -a <span class="variable">$LF</span></span><br><span class="line">mkdir -p <span class="string">"Statement/GBK/<span class="variable">$YESTERDAY</span>/"</span> </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"dir Statement/GBK/<span class="variable">$YESTERDAY</span> existed."</span> | tee -a <span class="variable">$LF</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unzipFiles()</span><br><span class="line">&#123;</span><br><span class="line">targetFile=\`ls Statement/GBK/<span class="variable">$YESTERDAY</span>/ | wc -l\` </span><br><span class="line"><span class="keyword">if</span> \[ <span class="string">"<span class="variable">$targetFile</span>"</span> -ge <span class="string">'1'</span> \];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"GBK/<span class="variable">$YESTERDAY</span>/*.csv found, will not unzip file"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> \[ -f <span class="string">"download/<span class="variable">$YESTERDAY</span>/<span class="variable">$&#123;YESTERDAY&#125;</span>_zhye-yh-cqg.zip"</span> \];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Finding *.zip then unzip them"</span>| tee -a <span class="variable">$LF</span></span><br><span class="line">find download -name <span class="string">"*.zip"</span> -<span class="built_in">exec</span> unzip -o -d Statement/GBK/<span class="variable">$YESTERDAY</span> &#123;&#125; \\;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">       <span class="built_in">echo</span> <span class="string">"Zip file download/<span class="variable">$YESTERDAY</span>/<span class="variable">$&#123;YESTERDAY&#125;</span>_zhye-yh-cqg.zip no found. Download failed"</span> | tee -a <span class="variable">$LF</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line">clearFiles()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Clear up...*.zip"</span>| tee -a <span class="variable">$LF</span></span><br><span class="line">find download -name <span class="string">"*.zip"</span> -<span class="built_in">exec</span> rm -f &#123;&#125; \\;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">transaferFiles()</span><br><span class="line">&#123;</span><br><span class="line">targetFile=\`ls Statement/GBK/<span class="variable">$YESTERDAY</span>/ | wc -l\` </span><br><span class="line"><span class="keyword">if</span> \[ <span class="string">"<span class="variable">$targetFile</span>"</span> -ge <span class="string">'1'</span> \];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Encoding start..."</span> | tee -a <span class="variable">$LF</span></span><br><span class="line">files=\`find Statement/GBK/<span class="variable">$YESTERDAY</span> -name <span class="string">"*.csv"</span>\`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"iconf GBK to UTF8"</span> | tee -a <span class="variable">$LF</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> <span class="variable">$files</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  filename=\`basename <span class="variable">$file</span>\`</span><br><span class="line">  iconv -f GBK -t UTF-8 -c <span class="variable">$file</span> &gt; Statement/utf8/<span class="variable">$YESTERDAY</span>/<span class="variable">$filename</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"GBK/<span class="variable">$YESTERDAY</span>/<span class="variable">$YESTERDAY</span>/.csv files no found"</span> | tee -a <span class="variable">$LF</span></span><br><span class="line">errorReport</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">zipFiles()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> \[ ! -f <span class="string">"Statement/zip/<span class="variable">$YESTERDAY</span>.Statement.zip"</span> \]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Zipping files into <span class="variable">$YESTERDAY</span>.Statement.zip"</span> | tee -a <span class="variable">$LF</span></span><br><span class="line">zip Statement/zip/<span class="variable">$YESTERDAY</span>.Statement.zip Statement/utf8/<span class="variable">$YESTERDAY</span>/*</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Found zip file will not zip them"</span> | tee -a <span class="variable">$LF</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sendingFiles()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Sending <span class="variable">$YESTERDAY</span>.Statement.zip to someone and simon"</span> | tee -a <span class="variable">$LF</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$YESTERDAY</span> 对账单已发送"</span> |mail -s <span class="string">"Statements for <span class="variable">$YESTERDAY</span>"</span> -a Statement/zip/<span class="variable">$YESTERDAY</span>.Statement.zip -c someone@address.com me@email.com </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sendingSingleFile()</span><br><span class="line">&#123;</span><br><span class="line">targetFile=\`find Statement/utf8/<span class="variable">$&#123;YESTERDAY&#125;</span>/ -name <span class="string">"<span class="variable">$&#123;YESTERDAY&#125;</span>_jymx-zjtg*"</span>\`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$YESTERDAY</span> 对账单已发送"</span> |mail -s <span class="string">"Statements for <span class="variable">$YESTERDAY</span>"</span> -a <span class="variable">$targetFile</span> -c someone@address.com me@email.com </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">errorReport</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"对账单发送错误了快查看"</span> |mail -s <span class="string">"ERROR:Statements sending error"</span> -a /var/<span class="built_in">log</span>/statement/daily/statement.log  alert@email.com  </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"对账单发送错误"</span> | tee -a <span class="variable">$LF</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'-------------------------------'</span> &gt;&gt; <span class="variable">$LF</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Start... '</span>\`date +%Y%m%d-%H:%M:%S\` | tee -a <span class="variable">$LF</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Moving to <span class="variable">$CW</span>"</span> | tee -a <span class="variable">$LF</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$CW</span></span><br><span class="line">download</span><br><span class="line">makedirs</span><br><span class="line">unzipFiles</span><br><span class="line">transaferFiles</span><br><span class="line">zipFiles</span><br><span class="line"><span class="keyword">if</span> \[ ! -f <span class="string">"Statement/zip/<span class="variable">$YESTERDAY</span>.Statement.zip"</span> \]; <span class="keyword">then</span></span><br><span class="line">errorReport</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="comment">#sendingFiles</span></span><br><span class="line">sendingSingleFile</span><br><span class="line">clearFiles</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Done...'</span>\`date +%Y%m%d-%H:%M:%S\` &gt;&gt; <span class="variable">$LF</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'-------------------------------'</span> &gt;&gt; <span class="variable">$LF</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="Linux" scheme="https://blog.codewalker.me/categories/Linux/"/>
    
      <category term="web" scheme="https://blog.codewalker.me/categories/Linux/web/"/>
    
    
  </entry>
  
</feed>
