<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simon Xie</title>
  <icon>https://www.gravatar.com/avatar/32db771918c67cb8f4969f34b77012cf</icon>
  <subtitle>All magic comes with a price.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.codewalker.me/"/>
  <updated>2020-04-19T13:49:56.000Z</updated>
  <id>https://blog.codewalker.me/</id>
  
  <author>
    <name>Simon Xie</name>
    <email>simon.xie@codewalker.me</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Public key for jenkins-2.232-1.1.noarch.rpm is not installed</title>
    <link href="https://blog.codewalker.me/2020/04/19/Public-key-for-jenkins-2-232-1-1-noarch-rpm-is-not-installed/"/>
    <id>https://blog.codewalker.me/2020/04/19/Public-key-for-jenkins-2-232-1-1-noarch-rpm-is-not-installed/</id>
    <published>2020-04-19T13:44:12.000Z</published>
    <updated>2020-04-19T13:49:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>How to fix <code>Public key for jenkins-2.232-1.1.noarch.rpm is not installed</code><br>when you update your system by running yum</p><p>what you should to do the only thing is import the <code>key file</code> from jenkins offical website</p><p>run this command as root</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key</span><br></pre></td></tr></table></figure><p>This’s all done.<br>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;How to fix &lt;code&gt;Public key for jenkins-2.232-1.1.noarch.rpm is not installed&lt;/code&gt;&lt;br&gt;when you update your system by running yum&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="linux" scheme="https://blog.codewalker.me/tags/linux/"/>
    
      <category term="rpm" scheme="https://blog.codewalker.me/tags/rpm/"/>
    
      <category term="centos" scheme="https://blog.codewalker.me/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>Build python 3.6 based on alpine</title>
    <link href="https://blog.codewalker.me/2020/04/01/Build-python-3-6-based-on-alpine/"/>
    <id>https://blog.codewalker.me/2020/04/01/Build-python-3-6-based-on-alpine/</id>
    <published>2020-04-01T07:19:38.000Z</published>
    <updated>2020-04-01T09:10:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><p>Files:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; tree</span><br><span class="line">.</span><br><span class="line">├── Dockerfile</span><br><span class="line">└── Python-3.6.10.tar.xz</span><br></pre></td></tr></table></figure><h2 id="1-Preparation"><a href="#1-Preparation" class="headerlink" title="1. Preparation"></a>1. Preparation</h2><ul><li>Make a new dir for your work</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir alpine_python3.6.10</span><br><span class="line"><span class="built_in">cd</span> alpine_python3.6.10</span><br></pre></td></tr></table></figure><ul><li>Download python souce code tar-ball.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget <span class="string">'https://www.python.org/ftp/python/3.6.10/Python-3.6.10.tar.xz'</span></span><br></pre></td></tr></table></figure><ul><li>cp &amp; past <code>Dockerfile</code> below.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">FROM alpine:latest AS alpine_py3.6</span><br><span class="line"></span><br><span class="line">COPY ./Python-3.6.10.tar.xz /root</span><br><span class="line">WORKDIR /root</span><br><span class="line"></span><br><span class="line">RUN \</span><br><span class="line">    sed -i <span class="string">'s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g'</span> /etc/apk/repositories \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"ipv6"</span> &gt;&gt; /etc/modules</span><br><span class="line">RUN \</span><br><span class="line">    apk update \ &amp;&amp; apk upgrade \</span><br><span class="line">    &amp;&amp; apk add --no-cache bash gcc libffi-dev python-dev openssl-dev make zlib-dev libc-dev bash-doc bash-completion \</span><br><span class="line">    &amp;&amp; rm -rf /var/cache/apk/* \</span><br><span class="line">    &amp;&amp; tar -xf Python-3.6.10.tar.xz \</span><br><span class="line">    &amp;&amp; rm -rf Python-3.6.10.tar.xz \</span><br><span class="line">    &amp;&amp; <span class="built_in">cd</span> Python-3.6.10 \</span><br><span class="line">    &amp;&amp; ./configure --<span class="built_in">enable</span>-optimizations \</span><br><span class="line">    &amp;&amp; make -j 8 \</span><br><span class="line">    &amp;&amp; make install \</span><br><span class="line">    &amp;&amp; pip3 install --upgrade pip \</span><br><span class="line">    &amp;&amp; rm -rf /root/Python-3.6.10</span><br><span class="line">CMD /bin/sh</span><br></pre></td></tr></table></figure><h2 id="2-Build-image"><a href="#2-Build-image" class="headerlink" title="2. Build image"></a>2. Build image</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t alpine:python3.6.10 .</span><br></pre></td></tr></table></figure><h2 id="3-Play-with-your-new-alpine-python3-6-10"><a href="#3-Play-with-your-new-alpine-python3-6-10" class="headerlink" title="3. Play with your new alpine:python3.6.10"></a>3. Play with your new alpine:python3.6.10</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd alpine:python3.6.10</span><br></pre></td></tr></table></figure><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h2&gt;&lt;p&gt;Files:&lt;/p&gt;
&lt;figure class=&quot;
      
    
    </summary>
    
    
      <category term="python" scheme="https://blog.codewalker.me/tags/python/"/>
    
      <category term="docker" scheme="https://blog.codewalker.me/tags/docker/"/>
    
      <category term="linux" scheme="https://blog.codewalker.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>play with supervisord</title>
    <link href="https://blog.codewalker.me/2020/03/17/play-with-supervisord/"/>
    <id>https://blog.codewalker.me/2020/03/17/play-with-supervisord/</id>
    <published>2020-03-17T00:44:13.000Z</published>
    <updated>2020-03-17T01:11:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><p>Files:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; tree</span><br><span class="line">.</span><br><span class="line">├── requirements.txt</span><br><span class="line">└── supervisord</span><br></pre></td></tr></table></figure><p>++File requirements.txt++</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisor&gt;=4.1.0</span><br></pre></td></tr></table></figure><h2 id="1-Install"><a href="#1-Install" class="headerlink" title="1. Install"></a>1. Install</h2><p>Install supervisord by pip3, in your terminal run this</p><p><code>pip3 install -r requirements.txt</code></p><h2 id="2-The-conf"><a href="#2-The-conf" class="headerlink" title="2. The .conf"></a>2. The .conf</h2><p>Write <code>supervisord.conf</code> for yourself. In this case, it would be check the status of <code>gunicorn</code>.</p><p>++File supervisord.conf++</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[supervisord]</span><br><span class="line">logfile=/code/logs/supervisord/supervisord.log     ; (main <span class="built_in">log</span> file;default <span class="variable">$CWD</span>/supervisord.log)</span><br><span class="line">logfile_maxbytes=0              ; (max main logfile bytes b4 rotation;default 50MB)</span><br><span class="line">logfile_backups=10                  ; (num of main logfile rotation backups;default 10)</span><br><span class="line">loglevel=info                       ; (<span class="built_in">log</span> level;default info; others: debug,warn,trace)</span><br><span class="line">pidfile=/code/supervisord/supervisord.pid ; (supervisord pidfile;default supervisord.pid)</span><br><span class="line">nodaemon=<span class="literal">true</span>                      ; (start <span class="keyword">in</span> foreground <span class="keyword">if</span> <span class="literal">true</span>;default <span class="literal">false</span>)</span><br><span class="line">minfds=1024                         ; (min. avail startup file descriptors;default 1024)</span><br><span class="line">minprocs=200                        ; (min. avail process descriptors;default 200)</span><br><span class="line">nocleanup=<span class="literal">false</span>                     ; (don<span class="string">'t clean up tempfiles at start;default false)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[program:gunicorn]</span></span><br><span class="line"><span class="string">startsecs = 2</span></span><br><span class="line"><span class="string">autorestart = true</span></span><br><span class="line"><span class="string">command=gunicorn -c gunicorn.conf.py wolfeye.wsgi:application</span></span><br></pre></td></tr></table></figure><h2 id="3-Fire-the-rocket"><a href="#3-Fire-the-rocket" class="headerlink" title="3. Fire the rocket"></a>3. Fire the rocket</h2><p><code>supervisord -c supervisord.conf</code></p><h2 id="4-Watch-the-logs"><a href="#4-Watch-the-logs" class="headerlink" title="4. Watch the logs"></a>4. Watch the logs</h2><p><code>tail -F /code/logs/supervisord/supervisord.log</code></p><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h2&gt;&lt;p&gt;Files:&lt;/p&gt;
&lt;figure class=&quot;
      
    
    </summary>
    
    
      <category term="linux" scheme="https://blog.codewalker.me/tags/linux/"/>
    
      <category term="supervisord" scheme="https://blog.codewalker.me/tags/supervisord/"/>
    
  </entry>
  
  <entry>
    <title>scalable web container with haproxy</title>
    <link href="https://blog.codewalker.me/2020/03/16/scalable-web-container-with-haproxy/"/>
    <id>https://blog.codewalker.me/2020/03/16/scalable-web-container-with-haproxy/</id>
    <published>2020-03-16T13:19:54.000Z</published>
    <updated>2020-03-16T13:30:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><p>Files:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; tree</span><br><span class="line">.</span><br><span class="line">├── app.py</span><br><span class="line">├── docker-compose.yml</span><br><span class="line">└── web.Dockerfile</span><br></pre></td></tr></table></figure><ul><li>docker-compose.yml</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">"3"</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  redis:</span><br><span class="line">    image: redis</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  web:</span><br><span class="line">    build:</span><br><span class="line">      context: .</span><br><span class="line">      dockerfile: web.Dockerfile</span><br><span class="line">    depends_on: </span><br><span class="line">      - redis</span><br><span class="line">    environment:</span><br><span class="line">      REDIS_HOST: redis</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  lb:</span><br><span class="line">    image: dockercloud/haproxy</span><br><span class="line">    links:</span><br><span class="line">      - web</span><br><span class="line">    ports:</span><br><span class="line">      - 80:80</span><br><span class="line">    depends_on: </span><br><span class="line">      - web</span><br><span class="line">    volumes:</span><br><span class="line">      - /var/run/docker.sock:/var/run/docker.sock</span><br><span class="line">    restart: always</span><br></pre></td></tr></table></figure><ul><li>app.py</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">from flask import Flask</span><br><span class="line">from redis import Redis</span><br><span class="line">import os</span><br><span class="line">import socket</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">redis = Redis(host=os.environ.get(<span class="string">'REDIS_HOST'</span>, <span class="string">'127.0.0.1'</span>), port=6379)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">'/'</span>)</span><br><span class="line">def hello():</span><br><span class="line">    redis.incr(<span class="string">'hits'</span>)</span><br><span class="line">    <span class="built_in">return</span> <span class="string">'Hello Container World! I have been seen %s times and my hostname is %s.\n'</span> % (redis.get(<span class="string">'hits'</span>),socket.gethostname())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run(host=<span class="string">"0.0.0.0"</span>, port=8000, debug=True)</span><br></pre></td></tr></table></figure><ul><li>web.Dockerfile</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FROM python:2.7</span><br><span class="line">LABEL maintaner=<span class="string">"simon.xie@codewalker.me"</span></span><br><span class="line">COPY . /app</span><br><span class="line">WORKDIR /app</span><br><span class="line">RUN python -m pip install --upgrade pip &amp;&amp; pip install flask redis</span><br><span class="line">EXPOSE 8000</span><br><span class="line">CMD [ <span class="string">"python"</span>, <span class="string">"app.py"</span> ]</span><br></pre></td></tr></table></figure><h2 id="How-to-run"><a href="#How-to-run" class="headerlink" title="How to run"></a>How to run</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>then you should see something like this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; docker-compose up</span><br><span class="line">Starting scale_redis_1 ... <span class="keyword">done</span></span><br><span class="line">Starting scale_web_1   ... <span class="keyword">done</span></span><br><span class="line">Starting scale_lb_1    ... <span class="keyword">done</span></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">lb_1     |   maxconn 4096</span><br><span class="line">lb_1     |   default_backend default_service</span><br><span class="line">lb_1     | backend default_service</span><br><span class="line">lb_1     |   server scale_web_1 scale_web_1:80 check inter 2000 rise 2 fall 3</span><br><span class="line">lb_1     | INFO:haproxy:Launching HAProxy</span><br><span class="line">lb_1     | INFO:haproxy:HAProxy has been launched(PID: 9)</span><br><span class="line">lb_1     | INFO:haproxy:===========END===========</span><br></pre></td></tr></table></figure><h2 id="How-to-see"><a href="#How-to-see" class="headerlink" title="How to see"></a>How to see</h2><p>Open 127.0.0.1 in your browser whatever you like.</p><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h2&gt;&lt;p&gt;Files:&lt;/p&gt;
&lt;figure class=&quot;
      
    
    </summary>
    
    
      <category term="python" scheme="https://blog.codewalker.me/tags/python/"/>
    
      <category term="docker" scheme="https://blog.codewalker.me/tags/docker/"/>
    
      <category term="redis" scheme="https://blog.codewalker.me/tags/redis/"/>
    
      <category term="flask" scheme="https://blog.codewalker.me/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>Install JDK8 on Macos</title>
    <link href="https://blog.codewalker.me/2019/11/26/Install-JDK8-on-Macos/"/>
    <id>https://blog.codewalker.me/2019/11/26/Install-JDK8-on-Macos/</id>
    <published>2019-11-26T02:17:14.000Z</published>
    <updated>2019-11-26T02:24:17.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><h2 id="Bref"><a href="#Bref" class="headerlink" title="Bref"></a>Bref</h2><ul><li>Install adoptopenjdk8</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install adoptopenjdk</span><br></pre></td></tr></table></figure><ul><li>Set HEAD version of jdk</li></ul><p>Install HEAD version</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#To activate jenv, add the following to your ~/.zshrc:</span></span><br><span class="line">  <span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$HOME</span>/.jenv/bin:<span class="variable">$PATH</span>"</span></span><br><span class="line">  <span class="built_in">eval</span> <span class="string">"<span class="variable">$(jenv init -)</span>"</span></span><br><span class="line">  <span class="comment">###############</span></span><br><span class="line">  <span class="built_in">source</span> ~/.zshrc</span><br><span class="line">  <span class="comment">### add jkd8 in</span></span><br><span class="line">  jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/</span><br><span class="line">  <span class="comment"># set jdk8 to head</span></span><br><span class="line">  jenv global 1.8</span><br><span class="line">  <span class="comment"># cheak your jdk env</span></span><br><span class="line">  &gt; java -version</span><br><span class="line">  openjdk version <span class="string">"1.8.0_232"</span></span><br><span class="line">  OpenJDK Runtime Environment (AdoptOpenJDK)(build 1.8.0_232-b09)</span><br><span class="line">  OpenJDK 64-Bit Server VM (AdoptOpenJDK)(build 25.232-b09, mixed mode)</span><br></pre></td></tr></table></figure><p>EOF</p><p>Enjoy</p><p>I, simon love this world ❤️</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h2&gt;&lt;h2 id=&quot;Bref&quot;&gt;&lt;a href=&quot;#Bref&quot;
      
    
    </summary>
    
    
      <category term="java" scheme="https://blog.codewalker.me/tags/java/"/>
    
      <category term="macos" scheme="https://blog.codewalker.me/tags/macos/"/>
    
      <category term="brew" scheme="https://blog.codewalker.me/tags/brew/"/>
    
  </entry>
  
  <entry>
    <title>play PostgreSQL with docker -- getting started</title>
    <link href="https://blog.codewalker.me/2019/11/08/play-PostgreSQL-with-docker-getting-started/"/>
    <id>https://blog.codewalker.me/2019/11/08/play-PostgreSQL-with-docker-getting-started/</id>
    <published>2019-11-08T02:53:59.000Z</published>
    <updated>2019-11-08T03:01:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo systemctl status docker</span><br><span class="line">[sudo] password <span class="keyword">for</span> codewalker:</span><br><span class="line">● docker.service - Docker Application Container Engine</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: http://docs.docker.com</span><br><span class="line">➜  ~ sudo systemctl start docker</span><br><span class="line">➜  ~ sudo docker run --name postgre_demo -e POSTGRES_PASSWORD=password1  -d postgres</span><br><span class="line">7e980bd0d15b484feda9076a9e40184bfdc54dee9a1ff64f30792ae586e62259</span><br><span class="line">➜  ~ sudo docker container ls</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">7e980bd0d15b        postgres            <span class="string">"docker-entrypoint..."</span>   42 seconds ago      Up 41 seconds       5432/tcp            postgre_demo</span><br><span class="line">➜  ~ sudo docker <span class="built_in">exec</span> -it postgre_demo psql -U postgres</span><br><span class="line">psql (12.0 (Debian 12.0-2.pgdg100+1))</span><br><span class="line">Type <span class="string">"help"</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line">postgres=<span class="comment"># CREATE DATABASE demo_db1;</span></span><br><span class="line">CREATE DATABASE</span><br><span class="line">postgres=<span class="comment"># \c demo_db1;</span></span><br><span class="line">You are now connected to database <span class="string">"demo_db1"</span> as user <span class="string">"postgres"</span>.</span><br><span class="line">demo_db1=<span class="comment"># CREATE TABLE demo_t(someting int);</span></span><br><span class="line">CREATE TABLE</span><br><span class="line">demo_db1=<span class="comment"># insert into demo_t(something) values (1);</span></span><br><span class="line">ERROR:  column <span class="string">"something"</span> of relation <span class="string">"demo_t"</span> does not exist</span><br><span class="line">LINE 1: insert into demo_t(something) values (1);</span><br><span class="line">                           ^</span><br><span class="line">demo_db1=<span class="comment"># INSERT INTO demo_t (someting) values (1);</span></span><br><span class="line">INSERT 0 1</span><br><span class="line">demo_db1=<span class="comment"># \dt</span></span><br><span class="line">         List of relations</span><br><span class="line"> Schema |  Name  | Type  |  Owner</span><br><span class="line">--------+--------+-------+----------</span><br><span class="line"> public | demo_t | table | postgres</span><br><span class="line">(1 row)</span><br><span class="line">demo_db1=<span class="comment"># select someting from demo_t;</span></span><br><span class="line"> someting</span><br><span class="line">----------</span><br><span class="line">        1</span><br><span class="line">(1 row)</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">================================================</span><br><span class="line">sudo docker container stop postgre_demo</span><br><span class="line">postgre_demo</span><br><span class="line">➜  ~ sudo docker container rm postgre_demo</span><br><span class="line">postgre_demo</span><br><span class="line">➜  ~ sudo docker container ls -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">sudo mkdir /opt/postgresqldb</span><br><span class="line">➜  ~ touch postgresql.demo.sql</span><br><span class="line">➜  ~ cat postgresql.demo.sql</span><br><span class="line">CREATE TABLE demo_t(something int);</span><br><span class="line">INSERT INTO demo_t (something) VALUSE (1);</span><br><span class="line">➜  ~ sudo docker run --name postgres_demo -v /opt/postgresqldb:/opt/demo/ -e POSTGRES_PASSWORD=password1 -d postgres</span><br><span class="line">e4ef75836b9fb13c9aa5a283d449c0156b7fd053ef902d06f2479453f0613264</span><br><span class="line">➜  ~ sudo docker <span class="built_in">exec</span> -it postgres_demo psql -U postgres -c <span class="string">"CREATE DATABASE demo_db2;"</span></span><br><span class="line">CREATE DATABASE</span><br><span class="line">➜  ~ sudo docker container ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">e4ef75836b9f        postgres            <span class="string">"docker-entrypoint..."</span>   32 seconds ago      Up 30 seconds       5432/tcp            postgres_demo</span><br><span class="line">➜  ~ sudo docker <span class="built_in">exec</span> -it e4e /bin/bash</span><br><span class="line">root@e4ef75836b9f:/<span class="comment"># cd /opt/demo/</span></span><br><span class="line">root@e4ef75836b9f:/opt/demo<span class="comment"># ls</span></span><br><span class="line">postgresql.demo.sql</span><br><span class="line">root@e4ef75836b9f:/opt/demo<span class="comment"># cat postgresql.demo.sql</span></span><br><span class="line">\c demo_db2;</span><br><span class="line">CREATE TABLE demo_t(something int);</span><br><span class="line">INSERT INTO demo_t (something) VALUES (1);</span><br><span class="line">root@e4ef75836b9f:/opt/demo<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">root@e95aa0b8940a:/opt/demo<span class="comment">#</span></span><br><span class="line">➜  ~ sudo docker <span class="built_in">exec</span> -it postgres_demo psql -U postgres -f /opt/demo/postgresql.demo.sql</span><br><span class="line">You are now connected to database <span class="string">"demo_db2"</span> as user <span class="string">"postgres"</span>.</span><br><span class="line">CREATE TABLE</span><br><span class="line">INSERT 0 1</span><br><span class="line">sudo docker <span class="built_in">exec</span> -it postgre_demo psql -U postgres</span><br><span class="line">psql (12.0 (Debian 12.0-2.pgdg100+1))</span><br><span class="line">Type <span class="string">"help"</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line">postgres=<span class="comment"># select datname from pg_database;</span></span><br><span class="line">  datname</span><br><span class="line">-----------</span><br><span class="line"> postgres</span><br><span class="line"> demo_db2</span><br><span class="line"> template1</span><br><span class="line"> template0</span><br><span class="line">(4 rows)</span><br><span class="line">postgres=<span class="comment"># \c demo_db2</span></span><br><span class="line">You are now connected to database <span class="string">"demo_db2"</span> as user <span class="string">"postgres"</span>.</span><br><span class="line">demo_db2=<span class="comment"># SELECT table_name FROM information_schema.tables WHERE table_schema = 'public';</span></span><br><span class="line"> table_name</span><br><span class="line">------------</span><br><span class="line"> demo_t</span><br><span class="line">(1 row)</span><br><span class="line">demo_db2=<span class="comment"># \d</span></span><br><span class="line">         List of relations</span><br><span class="line"> Schema |  Name  | Type  |  Owner</span><br><span class="line">--------+--------+-------+----------</span><br><span class="line"> public | demo_t | table | postgres</span><br><span class="line">(1 row)</span><br><span class="line">demo_db2=<span class="comment"># SELECT column_name FROM information_schema.columns WHERE table_name ='demo_t';</span></span><br><span class="line"> column_name</span><br><span class="line">-------------</span><br><span class="line"> something</span><br><span class="line">(1 row)</span><br><span class="line">demo_db2=<span class="comment"># select something from demo_t;</span></span><br><span class="line"> something</span><br><span class="line">-----------</span><br><span class="line">         1</span><br><span class="line">(1 row)</span><br><span class="line">demo_db2=<span class="comment"># exit</span></span><br><span class="line">➜  ~ sudo docker container ps</span><br><span class="line">[sudo] password <span class="keyword">for</span> codewalker:</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">e4ef75836b9f        postgres            <span class="string">"docker-entrypoint..."</span>   12 minutes ago      Up 12 minutes       5432/tcp            postgres_demo</span><br><span class="line">➜  ~ sudo docker container stop e4ef75836b9f</span><br><span class="line">e4ef75836b9f</span><br><span class="line">➜  ~ sudo docker container rm e4e</span><br><span class="line">e4e</span><br><span class="line">➜  ~ sudo docker container ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br></pre></td></tr></table></figure><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h2&gt;&lt;figure class=&quot;highlight bash
      
    
    </summary>
    
    
      <category term="docker" scheme="https://blog.codewalker.me/tags/docker/"/>
    
      <category term="database" scheme="https://blog.codewalker.me/tags/database/"/>
    
      <category term="postgresql" scheme="https://blog.codewalker.me/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>simple web log analyzer</title>
    <link href="https://blog.codewalker.me/2019/11/07/simple-web-log-analyzer/"/>
    <id>https://blog.codewalker.me/2019/11/07/simple-web-log-analyzer/</id>
    <published>2019-11-07T03:51:37.000Z</published>
    <updated>2019-11-08T03:00:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><p>Go and hit <a href="http://motelacc.codewalker.me/" target="_blank" rel="noopener">Simple website analyzer</a></p><h2 id="The-Point-of-Technique"><a href="#The-Point-of-Technique" class="headerlink" title="The Point of Technique"></a>The Point of Technique</h2><ul><li>goaccess: GoAccess is an open source real-time web log analyzer and interactive viewer that runs in a terminal in *nix systems or through your browser.</li><li>shell: Creating the file of analysis result.</li><li>nginx: web server.</li></ul><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h2&gt;&lt;p&gt;Go and hit &lt;a href=&quot;http:/
      
    
    </summary>
    
    
      <category term="bash" scheme="https://blog.codewalker.me/tags/bash/"/>
    
      <category term="nginx" scheme="https://blog.codewalker.me/tags/nginx/"/>
    
      <category term="goaccess" scheme="https://blog.codewalker.me/tags/goaccess/"/>
    
  </entry>
  
  <entry>
    <title>new CD/CI example</title>
    <link href="https://blog.codewalker.me/2019/11/05/new-CD-CI-example/"/>
    <id>https://blog.codewalker.me/2019/11/05/new-CD-CI-example/</id>
    <published>2019-11-05T04:20:54.000Z</published>
    <updated>2019-11-07T02:55:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><p>This example just for interviewer.It’s triggered by post-receive.</p><h2 id="Run-flow"><a href="#Run-flow" class="headerlink" title="Run flow"></a>Run flow</h2><ul><li><p>Local push -&gt; Git host -&gt; post-receive -&gt; Jenkins -&gt; shell</p></li><li><p><a href="http://motel.codewalker.me/" target="_blank" rel="noopener">Simple website</a></p></li><li><p><a href="http://jkens.codewalker.me/" target="_blank" rel="noopener">Jenkins website</a></p></li></ul><h2 id="The-Point-of-Technique"><a href="#The-Point-of-Technique" class="headerlink" title="The Point of Technique"></a>The Point of Technique</h2><ul><li>git<ul><li>post-receive: Git will trigger jenkins to do somethins.</li></ul></li><li>jenkins<ul><li>Git will call me when it fired.</li></ul></li><li>shell<ul><li>this script will do somethins when jenkins has been called.</li></ul></li><li>nginx<ul><li>Do some sutff after jenkins deployment doen.</li></ul></li><li>vue<ul><li>Build on local then push <strong>dists</strong> to Git host, a simple html example.</li></ul></li></ul><p>EOF<br>Enjoy<br>I, simon love this world ❤️</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h2&gt;&lt;p&gt;This example just for inte
      
    
    </summary>
    
    
      <category term="bash" scheme="https://blog.codewalker.me/tags/bash/"/>
    
      <category term="jenkins" scheme="https://blog.codewalker.me/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>docker-zsh-completion with oh-my-zsh</title>
    <link href="https://blog.codewalker.me/2019/10/30/docker-zsh-completion-with-oh-my-zsh/"/>
    <id>https://blog.codewalker.me/2019/10/30/docker-zsh-completion-with-oh-my-zsh/</id>
    <published>2019-10-30T01:25:30.000Z</published>
    <updated>2019-10-30T01:38:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h1><p>You just need to enable the plugin in ‘oh-my-zsh’</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step 1</span></span><br><span class="line"><span class="comment"># mkdir &amp;&amp; download the _docker file if there isn't existed in this path'~/.oh-my-zsh/plugins/docker/_docker'</span></span><br><span class="line">curl -fLo ~/.oh-my-zsh/plugins/docker/_docker https://raw.github.com/felixr/docker-zsh-completion/master/_docker</span><br><span class="line"><span class="comment"># Step 2</span></span><br><span class="line"><span class="comment"># Enable the plug</span></span><br><span class="line"><span class="comment"># open ~/.zshrc and find line which is similar with plugins=(git osx autojump), then you need to add docker into that setting like this below.</span></span><br><span class="line">plugins=(git osx autojump docker)</span><br><span class="line"><span class="comment"># Step 3</span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>EOF<br>Enjoy</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h1&gt;&lt;p&gt;You just need to enable th
      
    
    </summary>
    
    
      <category term="docker" scheme="https://blog.codewalker.me/tags/docker/"/>
    
      <category term="bash" scheme="https://blog.codewalker.me/tags/bash/"/>
    
      <category term="oh-my-zsh" scheme="https://blog.codewalker.me/tags/oh-my-zsh/"/>
    
  </entry>
  
  <entry>
    <title>how to use &#39;left join&#39; with multi-condition</title>
    <link href="https://blog.codewalker.me/2019/05/31/how-to-use-left-join-with-multi-condition/"/>
    <id>https://blog.codewalker.me/2019/05/31/how-to-use-left-join-with-multi-condition/</id>
    <published>2019-05-31T03:20:03.000Z</published>
    <updated>2019-05-31T03:42:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,amount FROM product</span><br><span class="line">LEFT JOIN product_details</span><br><span class="line">    ON  (product.id = product_details.id)</span><br><span class="line">        AND product_details.id=2;</span><br></pre></td></tr></table></figure><p>EOF</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h1&gt;&lt;figure class=&quot;highlight plai
      
    
    </summary>
    
    
      <category term="mysql" scheme="https://blog.codewalker.me/tags/mysql/"/>
    
      <category term="database" scheme="https://blog.codewalker.me/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>How to turn on &#39;install App from anywhere&#39; on macOS Sierra 10.12 and above</title>
    <link href="https://blog.codewalker.me/2018/10/10/How-to-turn-on-install-App-from-anywhere/"/>
    <id>https://blog.codewalker.me/2018/10/10/How-to-turn-on-install-App-from-anywhere/</id>
    <published>2018-10-10T01:49:44.000Z</published>
    <updated>2018-10-10T02:04:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="How-to-turn-on-‘install-App-from-anywhere’-on-macOS-Sierra-10-12-and-above"><a href="#How-to-turn-on-‘install-App-from-anywhere’-on-macOS-Sierra-10-12-and-above" class="headerlink" title="How to turn on ‘install App from anywhere’ on macOS Sierra 10.12 and above"></a>How to turn on ‘install App from anywhere’ on macOS Sierra 10.12 and above</h1><p>In System Preferences &gt;&gt; Security &amp; Privacy &gt;&gt; Allow apps downloaded from you cannot see <code>Anywhere</code> when you want to install an App not from AppStore or any developer who is NOT identified.</p><ol><li><p><code>Open your Terminal</code></p></li><li><p>Type in <code>sudo spctl --master-disable</code></p></li><li><p>Press <code>enter</code> then type in your system password</p></li><li><p>Re-launch – (close then open) your System Preferences setting panel then you can see the option <code>Anywhere</code></p></li><li><p>Done</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;How-to-turn-on-‘install-App-from-anywhere’-on-macOS-Sierra-10-12-and-above&quot;&gt;&lt;a href=&quot;#How-to-turn-on-‘install-App-from-anywhere’-on-
      
    
    </summary>
    
    
      <category term="MacOSX" scheme="https://blog.codewalker.me/tags/MacOSX/"/>
    
  </entry>
  
  <entry>
    <title>nice switcher using pure css3</title>
    <link href="https://blog.codewalker.me/2018/08/26/nice-switcher-using-pure-css3/"/>
    <id>https://blog.codewalker.me/2018/08/26/nice-switcher-using-pure-css3/</id>
    <published>2018-08-25T16:41:55.000Z</published>
    <updated>2018-08-25T16:46:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h1><p><code>css file</code> named switcher</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ececec</span>;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">justify-items</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.switch</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">55px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">30px</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.slider</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">transition</span>: .<span class="number">5s</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">1px</span> <span class="built_in">rgba</span>(0, 0, 0, 0.1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.slider</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#afafaf</span>;</span><br><span class="line">  <span class="attribute">transition</span>: .<span class="number">5s</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.switch</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:checked</span> + <span class="selector-class">.slider</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: black; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:checked</span> + <span class="selector-class">.slider</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(47px) <span class="built_in">rotateZ</span>(45deg);</span><br><span class="line">  <span class="attribute">background-color</span>: yellow; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.slider</span><span class="selector-class">.round</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">35px</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.slider</span><span class="selector-class">.round</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">43%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">43%</span>;</span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">border-top-right-radius</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(-45deg); &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>switcher<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">'viewport'</span> <span class="attr">content</span>=<span class="string">'width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no'</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/switcher.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"switcher"</span> <span class="attr">class</span>=<span class="string">"switch"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">'switcher'</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"slider round"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"other_switcher"</span> <span class="attr">class</span>=<span class="string">"switch"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">'other_switcher'</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"slider round"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Talk-is-cheap&quot;&gt;&lt;a href=&quot;#Talk-is-cheap&quot; class=&quot;headerlink&quot; title=&quot;Talk is cheap&quot;&gt;&lt;/a&gt;Talk is cheap&lt;/h1&gt;&lt;p&gt;&lt;code&gt;css file&lt;/code&gt; name
      
    
    </summary>
    
    
      <category term="html5" scheme="https://blog.codewalker.me/tags/html5/"/>
    
      <category term="css3" scheme="https://blog.codewalker.me/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>Hotel website design</title>
    <link href="https://blog.codewalker.me/2018/08/19/Hotel-website-design/"/>
    <id>https://blog.codewalker.me/2018/08/19/Hotel-website-design/</id>
    <published>2018-08-18T16:06:05.000Z</published>
    <updated>2018-08-18T16:12:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Meet-my-new-hotel-website-design"><a href="#Meet-my-new-hotel-website-design" class="headerlink" title="Meet my new hotel website design"></a>Meet my new hotel website design</h1><p>press <a href="http://motel.codewalker.me" title="hotel websitedesing" target="_blank" rel="noopener">HERE</a> to view it.</p><p>I love this world.<br>Good night. &lt;3</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Meet-my-new-hotel-website-design&quot;&gt;&lt;a href=&quot;#Meet-my-new-hotel-website-design&quot; class=&quot;headerlink&quot; title=&quot;Meet my new hotel website de
      
    
    </summary>
    
    
      <category term="webdesign" scheme="https://blog.codewalker.me/tags/webdesign/"/>
    
      <category term="bootstrap" scheme="https://blog.codewalker.me/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>bricks alogorithm</title>
    <link href="https://blog.codewalker.me/2018/08/14/bricks-alogorithm/"/>
    <id>https://blog.codewalker.me/2018/08/14/bricks-alogorithm/</id>
    <published>2018-08-14T05:17:49.000Z</published>
    <updated>2018-08-14T05:19:02.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-08-14 13:07:01</span></span><br><span class="line"><span class="comment"># @Author  : Simon (simon.xie@codewalker.meg)</span></span><br><span class="line"><span class="comment"># @Link    : http://www.codewalker.me</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_bricks</span><span class="params">(small, big, goal)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">5</span>*big &lt;= goal:</span><br><span class="line">        s = goal<span class="number">-5</span>*big</span><br><span class="line">        <span class="keyword">if</span> s&lt;=small:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        s = goal%<span class="number">5</span></span><br><span class="line">        <span class="keyword">return</span> s&lt;=small</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        small = randint(<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">        big = randint(<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">        goal = randint(<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'small:&#123;0&#125;, big:&#123;1&#125;,goal: &#123;2&#125;=&gt; &#123;3&#125; '</span>.format(small,big,goal,make_bricks(small,big,goal))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
      <category term="python" scheme="https://blog.codewalker.me/tags/python/"/>
    
      <category term="alogorithm" scheme="https://blog.codewalker.me/tags/alogorithm/"/>
    
  </entry>
  
  <entry>
    <title>How to implement Stack in python</title>
    <link href="https://blog.codewalker.me/2018/08/09/How-to-implement-Stack-in-python/"/>
    <id>https://blog.codewalker.me/2018/08/09/How-to-implement-Stack-in-python/</id>
    <published>2018-08-09T02:49:48.000Z</published>
    <updated>2018-08-09T02:53:51.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Talk is cheap</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-08-09 10:42:22</span></span><br><span class="line"><span class="comment"># @Author  : Simon (simon.xie@codewalker.meg)</span></span><br><span class="line"><span class="comment"># @Link    : http://www.codewalker.me</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Element</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        self.value = value</span><br><span class="line">        self.next = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LinkedList</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, head=None)</span>:</span></span><br><span class="line">        self.head = head</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">append</span><span class="params">(self, new_element)</span>:</span></span><br><span class="line">        current = self.head</span><br><span class="line">        <span class="keyword">if</span> self.head:</span><br><span class="line">            <span class="keyword">while</span> current.next:</span><br><span class="line">                current = current.next</span><br><span class="line">            current.next = new_element</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.head = new_element</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert_first</span><span class="params">(self, new_element)</span>:</span></span><br><span class="line">        <span class="string">"Insert new element as the head of the LinkedList"</span></span><br><span class="line">        current = self.head</span><br><span class="line">        self.head = new_element</span><br><span class="line">        new_element.next = current</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_first</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"Delete the first (head) element in the LinkedList as return it"</span></span><br><span class="line">        current = self.head.next</span><br><span class="line">        self.head = current</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stack</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, top=None)</span>:</span></span><br><span class="line">        self.ll = LinkedList(top)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push</span><span class="params">(self, new_element)</span>:</span></span><br><span class="line">        <span class="string">"Push (add) a new element onto the top of the stack"</span></span><br><span class="line">        self.ll.insert_first(new_element)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pop</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"Pop (remove) the first element off the top of the stack and return it"</span></span><br><span class="line">        <span class="keyword">if</span> self.ll.head == <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">        current = self.ll.head</span><br><span class="line">        self.ll.delete_first()</span><br><span class="line">        <span class="keyword">return</span> current</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># Test cases</span></span><br><span class="line">    <span class="comment"># Set up some Elements</span></span><br><span class="line">    e1 = Element(<span class="number">1</span>)</span><br><span class="line">    e2 = Element(<span class="number">2</span>)</span><br><span class="line">    e3 = Element(<span class="number">3</span>)</span><br><span class="line">    e4 = Element(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Start setting up a Stack</span></span><br><span class="line">    stack = Stack(e1)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Test stack functionality</span></span><br><span class="line">    stack.push(e2)</span><br><span class="line">    stack.push(e3)</span><br><span class="line">    print(stack.pop().value)</span><br><span class="line">    print(stack.pop().value)</span><br><span class="line">    print(stack.pop().value)</span><br><span class="line">    print(stack.pop())</span><br><span class="line">    stack.push(e4)</span><br><span class="line">    print(stack.pop().value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Talk is cheap&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/sp
      
    
    </summary>
    
    
      <category term="python" scheme="https://blog.codewalker.me/tags/python/"/>
    
      <category term="stack" scheme="https://blog.codewalker.me/tags/stack/"/>
    
  </entry>
  
  <entry>
    <title>the template for hire</title>
    <link href="https://blog.codewalker.me/2018/08/01/the-template-for-hire/"/>
    <id>https://blog.codewalker.me/2018/08/01/the-template-for-hire/</id>
    <published>2018-08-01T02:58:40.000Z</published>
    <updated>2018-08-01T03:01:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Developpeur-web"><a href="#Developpeur-web" class="headerlink" title="Développeur web"></a>Développeur web</h1><h2 id="L’entreprise-Fake-name-Koss-Group"><a href="#L’entreprise-Fake-name-Koss-Group" class="headerlink" title="L’entreprise : Fake name - Koss Group"></a>L’entreprise : Fake name - Koss Group</h2><p>Fake discription balabala parse.<br>Excepturi amet amet ipsum et. Sed assumenda aliquid tempore laborum sunt voluptatem error. Amet nisi voluptas sequi sapiente id excepturi.</p><p>Eum quia vel rerum accusantium expedita rerum. Libero dolorem est quis ratione. Cumque voluptatibus vero.</p><p>Ipsam fuga fuga est. Hic necessitatibus suscipit. Reprehenderit quisquam adipisci et. Necessitatibus ea unde et nihil debitis.</p><p>Au sein d’une équipe de consultants dynamiques ayant à cœur de vous intégrer et de vous accompagner, vous aurez l’opportunité d’intervenir sur des projets digitaux innovants, riches et variés.</p><h2 id="Description-du-poste"><a href="#Description-du-poste" class="headerlink" title="Description du poste"></a>Description du poste</h2><p>Vous mangez, buvez, dormez et rêvez digital</p><p>Techniquement, vous maîtrisez les environnements PHP or Python-Flask (expérience à l’appui) Vous êtes capable de monter en compétence et êtes autonome sur des techniques que vous ne connaissez pas mais proches de celles déjà acquises. En charge de tous les projets de développement en technologies web et mobile de l’hôtel, nous recherchons un(e) Concepteur(trice) Développeur(se) web.</p><p>En étroite collaboration avec la Direction et les chargés d’affaires, vous contribuerez à la conceptualisation et au développement d’une plateforme web sur le framework.</p><p>Vous maîtrisez et êtes rigoureux avec les différents outils de suivi de projet, git ou subversion. Si vous avez un ID de github. c’est mieux.</p><p>Vous faites preuve de professionnalisme ainsi que d’un esprit d’équipe communiquant et synthétique</p><p>En <code>Montreal Quebec</code> vous rejoignez une équipe humaine et dynamique dans laquelle votre savoir-être et votre bonne humeur fera la différence pour inventer le futur de nos clients.</p><p>Ne cherchez plus et rejoignez-nous !</p><p>Qui ne rêve pas d’être épanoui et heureux au travail ? Si c’est votre souhait, ça tombe bien : depuis 2018, <code>Enterprise name</code> est labellisé Happy Trainees et Happy at Work for Starters.<br>Avec cela vous êtes forcément conquis pour venir travailler avec nous!</p><p>Pour vivre de nouvelles et belles aventures, merci d’envoyer votre CV à : <a href="mailto:`address@someemail.com" target="_blank" rel="noopener">`address@someemail.com</a>`</p><h2 id="Criteres-de-l’offre"><a href="#Criteres-de-l’offre" class="headerlink" title="Critères de l’offre"></a>Critères de l’offre</h2><h3 id="Competences-techniques"><a href="#Competences-techniques" class="headerlink" title="Compétences techniques"></a>Compétences techniques</h3><ul><li>Formation informatique</li><li>Statistique</li><li>Programmation web</li><li>Back-end PHP</li><li>AJAX/JavaScript</li><li>JQuery</li><li>HMTL</li><li>CSS</li><li>Bootstrap</li><li>Interface</li><li>Git</li><li>Web</li><li>Framework</li><li>MySql</li><li>Redis</li><li>Nginx, Apache2</li><li>CentOS</li></ul><h3 id="Description-du-profil"><a href="#Description-du-profil" class="headerlink" title="Description du profil"></a>Description du profil</h3><ul><li>Des bases solides de développement orienté objet en technologies PHP/Python</li><li>la rédaction des users stories de la solution</li><li>la modélisation et la conception technique</li><li>la mise en conformité de la solution avec les exigences de SEO</li><li>la mise en conformité de la solution avec les exigences de sécurité</li><li>le développement des sites</li></ul><h3 id="Experience-requise-5-ans"><a href="#Experience-requise-5-ans" class="headerlink" title="Expérience requise: 5+ ans"></a>Expérience requise: 5+ ans</h3><h3 id="Lieu-Montreal-Quebec"><a href="#Lieu-Montreal-Quebec" class="headerlink" title="Lieu: Montreal Quebec"></a>Lieu: Montreal Quebec</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Developpeur-web&quot;&gt;&lt;a href=&quot;#Developpeur-web&quot; class=&quot;headerlink&quot; title=&quot;Développeur web&quot;&gt;&lt;/a&gt;Développeur web&lt;/h1&gt;&lt;h2 id=&quot;L’entreprise-
      
    
    </summary>
    
    
      <category term="hire_template" scheme="https://blog.codewalker.me/tags/hire-template/"/>
    
  </entry>
  
  <entry>
    <title>Knowing Argparse in Python</title>
    <link href="https://blog.codewalker.me/2018/07/28/Knowing-Argparse-in-Python/"/>
    <id>https://blog.codewalker.me/2018/07/28/Knowing-Argparse-in-Python/</id>
    <published>2018-07-28T03:00:31.000Z</published>
    <updated>2018-07-31T07:26:21.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-07-28 11:01:21</span></span><br><span class="line"><span class="comment"># @Author  : Simon (simon.xie@codewalker.meg)</span></span><br><span class="line"><span class="comment"># @Link    : http://www.codewalker.me</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">(n)</span>:</span></span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(n):</span><br><span class="line">        a, b = b, a+b</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">"Calculate fibonacci"</span>)</span><br><span class="line">    group = parser.add_mutually_exclusive_group()</span><br><span class="line">    group.add_argument(<span class="string">'-v'</span>, <span class="string">'--verbose'</span>, action=<span class="string">'store_true'</span>)</span><br><span class="line">    group.add_argument(<span class="string">'-q'</span>, <span class="string">'--quit'</span>, action=<span class="string">'store_true'</span>)</span><br><span class="line">    parser.add_argument(</span><br><span class="line">        <span class="string">'num'</span>, help=<span class="string">'The fibonacci number you wish to calculate.'</span>, type=int)</span><br><span class="line">    parser.add_argument(</span><br><span class="line">        <span class="string">'-o'</span>, <span class="string">'--output'</span>, help=<span class="string">'Output result into a file'</span>, action=<span class="string">'store_true'</span>)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    num = args.num</span><br><span class="line">    result = fib(num)</span><br><span class="line">    output_result = <span class="string">f'The <span class="subst">&#123;num&#125;</span>th fibonacci is <span class="subst">&#123;result&#125;</span>'</span></span><br><span class="line">    <span class="keyword">if</span> args.verbose:</span><br><span class="line">        print(output_result)</span><br><span class="line">    <span class="keyword">elif</span> args.quit:</span><br><span class="line">        print(result)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">f'Fib(<span class="subst">&#123;num&#125;</span>)=<span class="subst">&#123;result&#125;</span>'</span>)</span><br><span class="line">    <span class="keyword">if</span> args.output:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'fibonacci.txt'</span>, <span class="string">'a'</span>) <span class="keyword">as</span> f_h:</span><br><span class="line">            f_h.write(<span class="string">'\n'</span> + output_result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
      <category term="python" scheme="https://blog.codewalker.me/tags/python/"/>
    
      <category term="argparse" scheme="https://blog.codewalker.me/tags/argparse/"/>
    
  </entry>
  
  <entry>
    <title>String tip capitalize</title>
    <link href="https://blog.codewalker.me/2018/07/28/String-tip-capitalize/"/>
    <id>https://blog.codewalker.me/2018/07/28/String-tip-capitalize/</id>
    <published>2018-07-28T01:47:08.000Z</published>
    <updated>2018-07-28T02:35:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Intor"><a href="#Intor" class="headerlink" title="Intor"></a>Intor</h1><p>In our work life, sometimes we wanna capitalize a word using <code>str.capitalize</code>, but for serveral sentense how to do it?</p><h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-07-28 09:50:38</span></span><br><span class="line"><span class="comment"># @Author  : Simon (simon.xie@codewalker.meg)</span></span><br><span class="line"><span class="comment"># @Link    : http://www.codewalker.me</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">capitalize_sentense</span><span class="params">(s,sep=None)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (sep <span class="keyword">or</span> <span class="string">' '</span>).join(x.capitalize() <span class="keyword">for</span> x <span class="keyword">in</span> s.split(sep))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">capitalize_the_first</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> s.capitalize()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    s = <span class="string">'Et mollJJDKitia et iJJDJkdn. digKKDJnissimos kdjkdjHHSJ.'</span></span><br><span class="line">    out = capitalize_sentense(s,sep=<span class="string">'. '</span>)</span><br><span class="line">    print(out)</span><br><span class="line">    out = capitalize_the_first(s)</span><br><span class="line">    print(out)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>Here’s a little trigger. we split them first, then capitalize them.</p><h2 id="Lazy-makes-the-world-better"><a href="#Lazy-makes-the-world-better" class="headerlink" title="Lazy makes the world better"></a>Lazy makes the world better</h2><p>EOF.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Intor&quot;&gt;&lt;a href=&quot;#Intor&quot; class=&quot;headerlink&quot; title=&quot;Intor&quot;&gt;&lt;/a&gt;Intor&lt;/h1&gt;&lt;p&gt;In our work life, sometimes we wanna capitalize a word usi
      
    
    </summary>
    
    
      <category term="python" scheme="https://blog.codewalker.me/tags/python/"/>
    
      <category term="tips" scheme="https://blog.codewalker.me/tags/tips/"/>
    
      <category term="string" scheme="https://blog.codewalker.me/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>Knowing Templates in Python</title>
    <link href="https://blog.codewalker.me/2018/07/27/Knowing-Templates-in-Python/"/>
    <id>https://blog.codewalker.me/2018/07/27/Knowing-Templates-in-Python/</id>
    <published>2018-07-27T14:45:12.000Z</published>
    <updated>2018-07-28T02:31:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Intor"><a href="#Intor" class="headerlink" title="Intor"></a>Intor</h1><p>Here, we are not talk about <strong>THE template</strong> as we have used to talk about <strong>the tempale engine</strong> such as <code>jinjia2</code>.<br>but, we are talking about <strong>string templete</strong><br>Commonly we write like this <code>print(&#39;balalabala %d&#39; % v)</code> it makes <code>v</code> instead of <code>%d</code><br>or in new style or THE F word whateve you want call it. <code>print(f&#39;balabala {v}&#39;)</code></p><p>Templates provide simpler string substitutions as described in PEP 292. Instead of the normal “%”-based substitutions. As we know, a string when we want to contert them to some format way.</p><h2 id="Talk-is-cheap"><a href="#Talk-is-cheap" class="headerlink" title="Talk is cheap"></a>Talk is cheap</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-07-27 22:46:42</span></span><br><span class="line"><span class="comment"># @Author  : Simon (simon.xie@codewalker.meg)</span></span><br><span class="line"><span class="comment"># @Link    : http://www.codewalker.me</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span>  string <span class="keyword">import</span> Template</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTemplate</span><span class="params">(Template)</span>:</span></span><br><span class="line">    delimiter = <span class="string">'#'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    cart = []</span><br><span class="line">    cart.append(dict(</span><br><span class="line">        item=<span class="string">'Coke'</span>,</span><br><span class="line">        price=<span class="number">8</span>,</span><br><span class="line">        qty=<span class="number">3</span></span><br><span class="line">    ))</span><br><span class="line">    cart.append(dict(</span><br><span class="line">        item=<span class="string">'Cake'</span>,</span><br><span class="line">        price=<span class="number">4</span>,</span><br><span class="line">        qty=<span class="number">4</span></span><br><span class="line">    ))</span><br><span class="line">    cart.append(dict(</span><br><span class="line">        item=<span class="string">"Apple"</span>,</span><br><span class="line">        price=<span class="number">1</span>,</span><br><span class="line">        qty=<span class="number">5</span></span><br><span class="line">    ))</span><br><span class="line">    t = Template(<span class="string">"$qty x $item per $price"</span>)</span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> cart:</span><br><span class="line">        print(t.substitute(item))</span><br><span class="line">        total += item[<span class="string">'price'</span>] * item[<span class="string">'qty'</span>]</span><br><span class="line">    print(<span class="string">f'Total: <span class="subst">&#123;total&#125;</span>'</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="Read-it-amp-comprehen-it-amp-love-it"><a href="#Read-it-amp-comprehen-it-amp-love-it" class="headerlink" title="Read it &amp; comprehen it &amp; love it"></a>Read it &amp; comprehen it &amp; love it</h2><p>EOF.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Intor&quot;&gt;&lt;a href=&quot;#Intor&quot; class=&quot;headerlink&quot; title=&quot;Intor&quot;&gt;&lt;/a&gt;Intor&lt;/h1&gt;&lt;p&gt;Here, we are not talk about &lt;strong&gt;THE template&lt;/strong&gt; 
      
    
    </summary>
    
    
      <category term="python" scheme="https://blog.codewalker.me/tags/python/"/>
    
      <category term="template" scheme="https://blog.codewalker.me/tags/template/"/>
    
  </entry>
  
  <entry>
    <title>Download pdf with asyncio and aiphttp</title>
    <link href="https://blog.codewalker.me/2018/07/25/download-pdf-with-asyncio-and-aiphttp/"/>
    <id>https://blog.codewalker.me/2018/07/25/download-pdf-with-asyncio-and-aiphttp/</id>
    <published>2018-07-24T16:24:28.000Z</published>
    <updated>2018-07-25T09:19:32.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Talk is cheap</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-07-25 00:24:28</span></span><br><span class="line"><span class="comment"># @Author  : Simon (simon.xie@codewalker.me)</span></span><br><span class="line"><span class="comment"># @Link    : http://www.codewalker.me</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> Request, urlopen</span><br><span class="line"><span class="keyword">import</span> aiofiles</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> aiohttp</span><br><span class="line"><span class="keyword">import</span> async_timeout</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">download_coroutine</span><span class="params">(url, headers, session)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> async_timeout.timeout(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> session.get(url) <span class="keyword">as</span> response:</span><br><span class="line">            path = <span class="string">'/path/to/some/where/you/like/'</span></span><br><span class="line">            filename = path + os.path.basename(url) + <span class="string">'.pdf'</span></span><br><span class="line">            <span class="keyword">async</span> <span class="keyword">with</span> aiofiles.open(filename, <span class="string">'wb'</span>) <span class="keyword">as</span> f_handle:</span><br><span class="line">                <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">                    chunk = <span class="keyword">await</span> response.content.read(<span class="number">1024</span>)</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> chunk:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">await</span> f_handle.write(chunk)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">await</span> response.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">url_list</span><span class="params">(url, headers)</span>:</span></span><br><span class="line">    req = Request(url, headers=headers)</span><br><span class="line">    data = urlopen(req).read()</span><br><span class="line">    d = json.loads(str(data, encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">    urls = d[<span class="string">'data'</span>]</span><br><span class="line">    <span class="keyword">return</span> urls</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(loop,url_api, headers)</span>:</span></span><br><span class="line">    urls = <span class="keyword">await</span> url_list(url_api,headers)</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession(loop=loop) <span class="keyword">as</span> session:</span><br><span class="line">        tasks = [download_coroutine(url, headers, session) <span class="keyword">for</span> url <span class="keyword">in</span> urls]</span><br><span class="line">        <span class="keyword">await</span> asyncio.gather(*tasks)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(url_api)</span>:</span></span><br><span class="line">    start_time = time.clock()</span><br><span class="line">    headers = &#123;<span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">               <span class="string">'Accept-Encoding'</span>: <span class="string">'gb2312,utf-8'</span>,</span><br><span class="line">               <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0(Windows;U;WindowsNT6.1;en-us)AppleWebKit/534.50(KHTML,likeGecko)Version/5.1Safari/534.50'</span>,</span><br><span class="line">               <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2'</span>,</span><br><span class="line">               <span class="string">'Connection'</span>: <span class="string">'Keep-alive'</span></span><br><span class="line">               &#125;</span><br><span class="line">    loop = asyncio.get_event_loop()</span><br><span class="line">    loop.run_until_complete(run(loop,url_api,headers))</span><br><span class="line">    loop.close()</span><br><span class="line">    t = time.clock()-start_time</span><br><span class="line">    print(<span class="string">'total time cost:%f.2'</span> % t)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    url_api = <span class="string">'http://www.someapi.com'</span></span><br><span class="line">    main(url_api)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Talk is cheap&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/sp
      
    
    </summary>
    
    
      <category term="python" scheme="https://blog.codewalker.me/tags/python/"/>
    
      <category term="asyncio" scheme="https://blog.codewalker.me/tags/asyncio/"/>
    
      <category term="aiphttp" scheme="https://blog.codewalker.me/tags/aiphttp/"/>
    
  </entry>
  
</feed>
